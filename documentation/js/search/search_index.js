var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.3,1,0.521]],["body/components/AppComponent.html",[0,0.567,1,0.958,2,0.867,3,0.867,4,1.577,5,1.577,6,1.577,7,0.693,8,2.393,9,1.577,10,2.276,11,2.276,12,3.804,13,1.933,14,3.804,15,1.933,16,3.804,17,1.066,18,0.076,19,1.066,20,0.693,21,0.273,22,1.066,23,1.933,24,1.933,25,1.591,26,2.179,27,1.577,28,1.307,29,1.577,30,0.693,31,1.577,32,0.693,33,1.577,34,0.693,35,1.066,36,1.577,37,1.577,38,0.062,39,0.062]],["title/modules/AppModule.html",[40,0.976,41,1.185]],["body/modules/AppModule.html",[1,1.032,2,0.779,3,0.779,7,0.622,17,1.556,18,0.078,19,0.957,20,0.794,21,0.245,22,0.957,30,0.974,32,0.974,34,0.974,35,0.957,38,0.058,39,0.058,40,1.487,41,2.358,42,1.416,43,3.021,44,3.021,45,1.807,46,2.149,47,2.149,48,2.149,49,2.743,50,1.729,51,1.729,52,2.786,53,3.556,54,2.149,55,1.729,56,3.556,57,2.786,58,1.729,59,2.786,60,3.556,61,3.556,62,1.729,63,3.556,64,2.149,65,2.786,66,2.786]],["title/components/BoardComponent.html",[0,0.3,30,0.521]],["body/components/BoardComponent.html",[0,0.408,1,0.225,2,0.282,3,0.282,4,0.513,5,0.513,6,0.513,7,0.225,9,0.513,10,1.518,11,1.518,13,0.851,15,0.851,17,0.737,18,0.079,19,0.347,20,0.225,21,0.189,22,0.347,23,0.851,24,0.851,25,0.7,26,1.269,27,0.513,28,0.951,29,0.513,30,0.558,31,0.513,32,0.225,33,0.513,34,0.225,35,1.087,36,1.8,37,0.513,38,0.027,39,0.027,45,0.851,50,1.854,67,0.778,68,1.039,69,2.145,70,1.322,71,1.674,72,1.674,73,0.282,74,1.518,75,1.655,76,3.543,77,3.164,78,3.543,79,3.311,80,2.554,81,2.497,82,2.497,83,2.987,84,3.715,85,2.497,86,0.7,87,1.674,88,2.497,89,3.311,90,2.497,91,2.987,92,2.497,93,1.674,94,2.497,95,1.655,96,1.332,97,1.655,98,1.332,99,0.422,100,1.009,101,2.497,102,1.77,103,1.674,104,3.311,105,0.7,106,2.655,107,2.497,108,2.497,109,1.985,110,1.291,111,1.09,112,1.359,113,1.09,114,1.291,115,2.145,116,1.291,117,1.674,118,1.674,119,2.011,120,3.164,121,1.985,122,1.332,123,2.497,124,2.184,125,1.009,126,1.009,127,1.009,128,1.009,129,1.009,130,2.055,131,1.009,132,1.332,133,1.009,134,1.322,135,1.655,136,3.087,137,1.009,138,1.291,139,1.009,140,0.626,141,1.009,142,1.009,143,1.009,144,1.009,145,1.674,146,1.407,147,1.385,148,1.437,149,1.009,150,1.009,151,1.964,152,1.291,153,1.674,154,1.009,155,1.291,156,1.291,157,1.674,158,2.133,159,1.674,160,2.055,161,1.009,162,3.635,163,1.009,164,2.497,165,2.77,166,2.77,167,1.926,168,1.674,169,1.009,170,1.674,171,1.719,172,1.674,173,1.926,174,1.674,175,2.497,176,1.039,177,1.655,178,1.674,179,1.269,180,1.009,181,2.497,182,1.674,183,1.55,184,2.145,185,1.674,186,1.674,187,1.655,188,1.674,189,1.674,190,1.674,191,3.164,192,1.009,193,1.009,194,1.009,195,1.746,196,1.009,197,1.009,198,0.626,199,1.482,200,1.009,201,1.009,202,1.009,203,1.009,204,1.009,205,0.778,206,1.009,207,1.655,208,0.778,209,2.497,210,2.497,211,1.926,212,2.145,213,1.437,214,1.009,215,2.497,216,1.55,217,1.009,218,1.009,219,1.009,220,1.009,221,0.778,222,2.145,223,2.145,224,1.674,225,1.009,226,0.7,227,1.009,228,1.009,229,1.009,230,1.009,231,1.009,232,1.674,233,2.497,234,1.009,235,2.497,236,3.164,237,1.009,238,1.009,239,1.009,240,1.009,241,2.497,242,1.674,243,1.385,244,1.674,245,1.009,246,1.009,247,1.674,248,1.009,249,1.009,250,1.009,251,1.009,252,1.009,253,1.655,254,1.009,255,1.009,256,1.009,257,1.674,258,1.674,259,0.778,260,1.009,261,1.674,262,1.009,263,1.674,264,1.009,265,1.009,266,1.009,267,1.009,268,1.674]],["title/components/DocumentationComponent.html",[0,0.3,32,0.521]],["body/components/DocumentationComponent.html",[0,0.555,1,0.645,2,0.807,3,1.113,4,1.468,5,1.468,6,1.468,7,0.645,9,1.468,10,2.236,11,2.236,13,1.849,15,1.849,17,0.992,18,0.077,19,0.992,20,0.645,21,0.254,22,0.992,23,1.849,24,1.849,25,1.522,26,2.124,27,1.468,28,1.25,29,1.468,30,0.645,31,1.468,32,0.934,33,1.468,34,0.645,35,0.992,36,1.468,37,1.468,38,0.059,39,0.059,68,2.258,73,0.807,86,1.522,99,1.666,102,1.522,147,1.208,148,1.208,269,2.228,270,3.072,271,2.595,272,3.638,273,3.638,274,3.225,275,2.888,276,2.888,277,3.638]],["title/components/UserInputComponent.html",[0,0.3,34,0.521]],["body/components/UserInputComponent.html",[0,0.448,1,0.358,2,0.448,3,0.448,4,0.814,5,0.814,6,0.814,7,0.358,9,0.814,10,1.857,11,1.857,13,1.228,15,1.228,17,0.83,18,0.078,19,0.55,20,0.358,21,0.141,22,0.55,23,1.228,24,1.228,25,1.01,26,2.03,27,0.814,28,0.999,29,0.814,30,0.358,31,0.814,32,0.358,33,0.814,34,0.724,35,1.483,36,2.252,37,0.814,38,0.039,39,0.039,45,1.646,58,2.601,62,0.994,68,1.499,70,1.255,73,0.448,74,1.228,86,1.01,95,2.926,96,2.354,97,2.498,98,2.354,99,0.67,102,1.73,109,1.857,110,1.863,111,0.814,112,1.303,113,0.814,119,1.228,121,1.857,124,2.13,132,1.499,138,2.243,146,1.646,147,1.355,148,1.587,151,2.01,156,3.27,160,2.01,176,2.01,179,1.646,183,2.01,195,1.478,198,2.01,199,0.67,208,1.235,213,1.633,216,0.994,221,1.235,226,1.01,243,0.67,270,2.243,274,2.498,278,3.233,279,1.235,280,2.416,281,2.416,282,3.239,283,3.239,284,3.239,285,3.654,286,3.239,287,1.601,288,3.654,289,2.416,290,1.601,291,2.416,292,2.416,293,2.416,294,1.601,295,2.416,296,2.416,297,2.498,298,1.601,299,1.601,300,2.416,301,2.416,302,2.416,303,3.239,304,1.601,305,1.601,306,1.601,307,1.601,308,1.601,309,2.416,310,2.416,311,2.416,312,1.601,313,2.416,314,2.909,315,2.909,316,1.601,317,2.909,318,2.416,319,2.909,320,2.416,321,1.601,322,2.909,323,2.416,324,1.601,325,1.601,326,1.499,327,1.601,328,1.601,329,1.601,330,1.601,331,1.601,332,1.235,333,2.416,334,1.863]],["title/classes/board.html",[21,0.205,70,0.801]],["body/classes/board.html",[2,0.314,3,0.314,7,0.251,17,0.386,18,0.079,20,0.251,21,0.161,25,0.766,28,1.008,35,1.188,38,0.03,39,0.03,51,1.136,70,1.341,73,0.314,74,0.93,75,3.192,80,2.057,86,0.766,96,1.655,98,1.655,99,0.47,102,1.678,109,1.817,111,1.492,112,1.263,113,1.492,114,2.057,119,1.355,121,1.817,124,2.323,130,2.775,132,2.335,134,1.518,135,2.559,140,2.219,146,2.121,147,1.605,148,1.116,158,2.059,160,0.698,167,0.867,171,2.059,173,1.785,176,1.822,177,2.057,179,2.013,195,1.599,199,1.116,207,1.412,211,1.412,213,1.632,216,0.698,226,1.82,243,0.968,253,2.835,259,1.412,297,0.867,332,1.412,335,0.867,336,2.667,337,2.667,338,1.83,339,1.83,340,2.667,341,1.83,342,1.83,343,2.667,344,1.412,345,1.83,346,1.125,347,1.125,348,1.125,349,1.125,350,1.125,351,1.83,352,1.125,353,3.458,354,3.902,355,1.125,356,1.125,357,1.83,358,1.83,359,1.125,360,1.83,361,1.83,362,1.125,363,1.125,364,1.125,365,1.125,366,1.83,367,0.867,368,1.125,369,1.125,370,1.83,371,2.667,372,1.83,373,0.867,374,1.125,375,1.125,376,1.125,377,1.125,378,2.936,379,1.125,380,1.125,381,1.125,382,1.83,383,3.575,384,0.867,385,1.125,386,1.125,387,1.125,388,1.125,389,1.125,390,3.458,391,2.314,392,4.418,393,4.205,394,3.147,395,3.147,396,3.458,397,3.147,398,3.837,399,3.458,400,1.83,401,1.83,402,1.83,403,2.667,404,2.314,405,3.675,406,2.314]],["title/coverage.html",[407,2.44]],["body/coverage.html",[0,0.559,1,0.72,7,0.72,8,2.485,18,0.076,21,0.343,30,0.72,32,0.72,34,0.72,38,0.063,39,0.063,58,2,67,2.485,70,1.107,105,1.628,112,1.107,134,1.107,151,2,213,1.817,269,2.485,271,2,278,2.485,279,2.485,335,2.485,407,2.485,408,3.222,409,3.222,410,4.182,411,3.222,412,3.222,413,3.222,414,3.222,415,3.222,416,2.485,417,3.222,418,3.222,419,3.222,420,3.222,421,2.485,422,3.002,423,2.485,424,3.222,425,3.222]],["title/dependencies.html",[42,1.423,426,1.957]],["body/dependencies.html",[18,0.078,19,1.117,38,0.064,39,0.064,42,1.652,54,3.019,55,2.429,62,2.018,64,2.508,106,2.018,122,2.018,205,2.508,427,3.252,428,4.65,429,3.252,430,3.914,431,3.252,432,3.252,433,3.252,434,3.252,435,3.252,436,3.252,437,3.252,438,3.252,439,3.914,440,3.252,441,3.252,442,3.252,443,3.252,444,3.252]],["title/index.html",[73,0.547,155,1.51,445,1.957]],["body/index.html",[18,0.058,38,0.058,39,0.058,106,2.218,116,2.166,119,1.427,122,1.743,134,1.228,179,1.427,226,1.175,271,2.218,326,1.743,334,3.583,373,2.166,446,2.808,447,3.574,448,2.808,449,2.808,450,2.808,451,2.808,452,2.808,453,2.808,454,2.808,455,2.808,456,2.808,457,3.574,458,3.931,459,2.808,460,2.808,461,2.808,462,2.808,463,2.808,464,2.808,465,4.6,466,4.6,467,4.6,468,4.6,469,2.808,470,2.808,471,2.808,472,4.493,473,2.808,474,2.808,475,2.808,476,2.808,477,2.166,478,2.808,479,2.808,480,2.808,481,2.808,482,2.808,483,2.808,484,2.808,485,2.808,486,2.808,487,2.808,488,2.808,489,2.808,490,2.808,491,2.808,492,2.808]],["title/modules.html",[40,1.323]],["body/modules.html",[18,0.068,38,0.068,39,0.068,40,1.532,41,1.861,55,2.273,493,3.663,494,3.663,495,3.663]],["title/overview.html",[496,2.44]],["body/overview.html",[0,0.421,1,1.024,18,0.075,20,0.73,21,0.288,22,1.122,30,0.94,32,0.94,34,0.94,38,0.064,39,0.064,40,1.642,41,2.388,42,1.66,43,2.52,44,2.52,45,1.66,46,2.52,47,2.52,48,2.52,49,3.027,50,2.028,51,2.028,226,1.367,326,2.028,477,2.52,496,2.52]],["title/classes/tile.html",[21,0.205,134,0.801]],["body/classes/tile.html",[2,0.633,3,0.633,7,0.506,18,0.078,20,0.506,21,0.273,28,0.778,38,0.051,39,0.051,70,1.306,73,0.633,74,1.576,86,1.297,99,0.948,102,1.819,105,1.72,109,1.932,111,1.151,112,1.446,113,1.151,121,1.932,124,2.316,130,2.661,134,1.511,136,2.392,140,2.36,146,2.09,147,1.297,148,1.297,152,2.933,158,2.36,171,2.553,187,2.933,195,2.21,199,1.666,213,0.948,243,1.297,344,2.392,367,2.392,384,1.748,416,1.748,497,3.803,498,3.803,499,3.803,500,3.803,501,3.803,502,3.803,503,3.102,504,2.266,505,2.266,506,2.266,507,2.266,508,2.266,509,2.266,510,3.102,511,3.803,512,4.113,513,4.113,514,2.266,515,3.102,516,3.536,517,2.266,518,3.536,519,2.266,520,2.266,521,2.266]],["title/miscellaneous/variables.html",[105,1.171,522,1.51]],["body/miscellaneous/variables.html",[18,0.077,38,0.066,39,0.066,73,0.952,105,1.426,112,1.383,183,2.498,198,2.498,199,1.426,243,1.426,421,2.629,422,3.53,423,2.629,522,2.629,523,3.408,524,3.408,525,4.425,526,4.025]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":213,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["0.8.26",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":226,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"overview.html":{}}}],["1.png",{"_index":473,"title":{},"body":{"index.html":{}}}],["1].adjbomb",{"_index":397,"title":{},"body":{"classes/board.html":{}}}],["1].isbomb",{"_index":394,"title":{},"body":{"classes/board.html":{}}}],["1].isrev",{"_index":395,"title":{},"body":{"classes/board.html":{}}}],["1].revealtil",{"_index":398,"title":{},"body":{"classes/board.html":{}}}],["1][col",{"_index":393,"title":{},"body":{"classes/board.html":{}}}],["1][col].adjbomb",{"_index":402,"title":{},"body":{"classes/board.html":{}}}],["1][col].isbomb",{"_index":400,"title":{},"body":{"classes/board.html":{}}}],["1][col].isrev",{"_index":401,"title":{},"body":{"classes/board.html":{}}}],["1][col].revealtil",{"_index":403,"title":{},"body":{"classes/board.html":{}}}],["2",{"_index":326,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{},"overview.html":{}}}],["2.5.4",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/angularj",{"_index":468,"title":{},"body":{"index.html":{}}}],["2.png",{"_index":474,"title":{},"body":{"index.html":{}}}],["2/10",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["2499",{"_index":327,"title":{},"body":{"components/UserInputComponent.html":{}}}],["25",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["2500",{"_index":330,"title":{},"body":{"components/UserInputComponent.html":{}}}],["3",{"_index":475,"title":{},"body":{"index.html":{}}}],["3.png",{"_index":476,"title":{},"body":{"index.html":{}}}],["3/12",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":477,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.png",{"_index":478,"title":{},"body":{"index.html":{}}}],["42",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":479,"title":{},"body":{"index.html":{}}}],["5.png",{"_index":480,"title":{},"body":{"index.html":{}}}],["500",{"_index":263,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":481,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":450,"title":{},"body":{"index.html":{}}}],["6.4.1",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["6.png",{"_index":482,"title":{},"body":{"index.html":{}}}],["6/14",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":235,"title":{},"body":{"components/BoardComponent.html":{}}}],["7",{"_index":483,"title":{},"body":{"index.html":{}}}],["7.png",{"_index":484,"title":{},"body":{"index.html":{}}}],["8",{"_index":485,"title":{},"body":{"index.html":{}}}],["8.png",{"_index":486,"title":{},"body":{"index.html":{}}}],["8/25",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["accord",{"_index":364,"title":{},"body":{"classes/board.html":{}}}],["accordingli",{"_index":367,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["actual_compon",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["add",{"_index":240,"title":{},"body":{"components/BoardComponent.html":{}}}],["adjac",{"_index":366,"title":{},"body":{"classes/board.html":{}}}],["adjbomb",{"_index":497,"title":{},"body":{"classes/tile.html":{}}}],["adjust",{"_index":137,"title":{},"body":{"components/BoardComponent.html":{}}}],["again",{"_index":251,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert",{"_index":142,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"congratul",{"_index":262,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"no",{"_index":248,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"w",{"_index":264,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert('cel",{"_index":328,"title":{},"body":{"components/UserInputComponent.html":{}}}],["allow",{"_index":141,"title":{},"body":{"components/BoardComponent.html":{}}}],["alreadi",{"_index":515,"title":{},"body":{"classes/tile.html":{}}}],["angular",{"_index":116,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["app.compon",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":165,"title":{},"body":{"components/BoardComponent.html":{}}}],["appmodul",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["be",{"_index":175,"title":{},"body":{"components/BoardComponent.html":{}}}],["behavior",{"_index":172,"title":{},"body":{"components/BoardComponent.html":{}}}],["board",{"_index":70,"title":{"classes/board.html":{}},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["board'},{'nam",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["board(this.rowcount",{"_index":220,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.css",{"_index":71,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":72,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.compon",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["boardcompon",{"_index":30,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardformgroup",{"_index":282,"title":{},"body":{"components/UserInputComponent.html":{}}}],["bomb",{"_index":253,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["bombcheck",{"_index":338,"title":{},"body":{"classes/board.html":{}}}],["bombcheck(row",{"_index":351,"title":{},"body":{"classes/board.html":{}}}],["bombcount",{"_index":322,"title":{},"body":{"components/UserInputComponent.html":{}}}],["boolean",{"_index":195,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":406,"title":{},"body":{"classes/board.html":{}}}],["bound",{"_index":358,"title":{},"body":{"classes/board.html":{}}}],["boundscheck",{"_index":339,"title":{},"body":{"classes/board.html":{}}}],["boundscheck(row",{"_index":355,"title":{},"body":{"classes/board.html":{}}}],["brows",{"_index":495,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["calcul",{"_index":259,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["call",{"_index":160,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["ceas",{"_index":380,"title":{},"body":{"classes/board.html":{}}}],["cellcount",{"_index":321,"title":{},"body":{"components/UserInputComponent.html":{}}}],["chang",{"_index":152,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["check",{"_index":132,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["cite",{"_index":452,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/board.html":{},"classes/tile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"overview.html":{},"classes/tile.html":{}}}],["cli",{"_index":448,"title":{},"body":{"index.html":{}}}],["click",{"_index":158,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["clicked(right",{"_index":510,"title":{},"body":{"classes/tile.html":{}}}],["clock",{"_index":185,"title":{},"body":{"components/BoardComponent.html":{}}}],["cluster_appmodul",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":277,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["col",{"_index":130,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["colcount",{"_index":336,"title":{},"body":{"classes/board.html":{}}}],["column",{"_index":176,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["columncount",{"_index":95,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["complet",{"_index":260,"title":{},"body":{"components/BoardComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["condit",{"_index":108,"title":{},"body":{"components/BoardComponent.html":{}}}],["constructor",{"_index":99,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["constructor(formbuild",{"_index":287,"title":{},"body":{"components/UserInputComponent.html":{}}}],["constructor(priv",{"_index":208,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["constructor(row",{"_index":344,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["constructor(st",{"_index":100,"title":{},"body":{"components/BoardComponent.html":{}}}],["contain",{"_index":374,"title":{},"body":{"classes/board.html":{}}}],["convert",{"_index":182,"title":{},"body":{"components/BoardComponent.html":{}}}],["coordin",{"_index":354,"title":{},"body":{"classes/board.html":{}}}],["core",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":297,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["correctli",{"_index":188,"title":{},"body":{"components/BoardComponent.html":{}}}],["count",{"_index":138,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["coverag",{"_index":407,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":291,"title":{},"body":{"components/UserInputComponent.html":{}}}],["createform",{"_index":284,"title":{},"body":{"components/UserInputComponent.html":{}}}],["current",{"_index":133,"title":{},"body":{"components/BoardComponent.html":{}}}],["declar",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":198,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":102,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["depend",{"_index":42,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":114,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["determin",{"_index":170,"title":{},"body":{"components/BoardComponent.html":{}}}],["dialog",{"_index":300,"title":{},"body":{"components/UserInputComponent.html":{}}}],["digit",{"_index":184,"title":{},"body":{"components/BoardComponent.html":{}}}],["digitaltim",{"_index":76,"title":{},"body":{"components/BoardComponent.html":{}}}],["direct",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["display",{"_index":118,"title":{},"body":{"components/BoardComponent.html":{}}}],["document",{"_index":271,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{},"index.html":{}}}],["documentation'},{'nam",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["documentation.component.css",{"_index":272,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.html",{"_index":273,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.compon",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["documentationcompon",{"_index":32,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["dynam",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["elaps",{"_index":190,"title":{},"body":{"components/BoardComponent.html":{}}}],["element",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["empti",{"_index":373,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["encount",{"_index":265,"title":{},"body":{"components/BoardComponent.html":{}}}],["end",{"_index":177,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["environ",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.preventdefault",{"_index":385,"title":{},"body":{"classes/board.html":{}}}],["exce",{"_index":329,"title":{},"body":{"components/UserInputComponent.html":{}}}],["exeed",{"_index":239,"title":{},"body":{"components/BoardComponent.html":{}}}],["exist",{"_index":140,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["export",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"overview.html":{},"classes/tile.html":{}}}],["failur",{"_index":266,"title":{},"body":{"components/BoardComponent.html":{}}}],["fals",{"_index":199,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["fan",{"_index":372,"title":{},"body":{"classes/board.html":{}}}],["favicon",{"_index":455,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":301,"title":{},"body":{"components/UserInputComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["flag",{"_index":136,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["flagcheck",{"_index":87,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcheck(row",{"_index":129,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcount",{"_index":77,"title":{},"body":{"components/BoardComponent.html":{}}}],["flaggedmin",{"_index":78,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagtil",{"_index":501,"title":{},"body":{"classes/tile.html":{}}}],["font",{"_index":462,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":389,"title":{},"body":{"classes/board.html":{}}}],["format",{"_index":186,"title":{},"body":{"components/BoardComponent.html":{}}}],["formbuild",{"_index":288,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formgroup",{"_index":303,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formsmodul",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":371,"title":{},"body":{"classes/board.html":{}}}],["game",{"_index":119,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["game/covered.png",{"_index":469,"title":{},"body":{"index.html":{}}}],["game/empty.png",{"_index":470,"title":{},"body":{"index.html":{}}}],["game/mine.png",{"_index":471,"title":{},"body":{"index.html":{}}}],["game/numb",{"_index":472,"title":{},"body":{"index.html":{}}}],["gameoverdialog",{"_index":88,"title":{},"body":{"components/BoardComponent.html":{}}}],["gener",{"_index":447,"title":{},"body":{"index.html":{}}}],["get",{"_index":445,"title":{"index.html":{}},"body":{}}],["github",{"_index":460,"title":{},"body":{"index.html":{}}}],["given",{"_index":353,"title":{},"body":{"classes/board.html":{}}}],["haswon",{"_index":79,"title":{},"body":{"components/BoardComponent.html":{}}}],["hit",{"_index":378,"title":{},"body":{"classes/board.html":{}}}],["hour",{"_index":236,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["http://lui",{"_index":465,"title":{},"body":{"index.html":{}}}],["http://www.simplygoodcode.com/2014/04/angularj",{"_index":488,"title":{},"body":{"index.html":{}}}],["https://compodoc.github.io/compodoc",{"_index":454,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/icons/bomb?style=solid",{"_index":456,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/book",{"_index":459,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/github",{"_index":461,"title":{},"body":{"index.html":{}}}],["https://fonts.google.com/specimen/jura",{"_index":463,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/ng2",{"_index":453,"title":{},"body":{"index.html":{}}}],["icon",{"_index":458,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["if(!this.isgameov",{"_index":252,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(!this.stoptim",{"_index":231,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isbomb",{"_index":244,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isflag",{"_index":255,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.flaggedmin",{"_index":245,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.isflag",{"_index":521,"title":{},"body":{"classes/tile.html":{}}}],["ii/index.html",{"_index":492,"title":{},"body":{"index.html":{}}}],["imag",{"_index":512,"title":{},"body":{"classes/tile.html":{}}}],["implement",{"_index":68,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["inform",{"_index":157,"title":{},"body":{"components/BoardComponent.html":{}}}],["init",{"_index":123,"title":{},"body":{"components/BoardComponent.html":{}}}],["initi",{"_index":104,"title":{},"body":{"components/BoardComponent.html":{}}}],["input",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["input.compon",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.css",{"_index":280,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.html",{"_index":281,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.t",{"_index":279,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:10",{"_index":304,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:11",{"_index":305,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:12",{"_index":307,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:13",{"_index":306,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:14",{"_index":308,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:15",{"_index":289,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:22",{"_index":298,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:33",{"_index":290,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:49",{"_index":299,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:96",{"_index":294,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input/us",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"coverage.html":{}}}],["inspir",{"_index":487,"title":{},"body":{"index.html":{}}}],["isbomb",{"_index":498,"title":{},"body":{"classes/tile.html":{}}}],["isflag",{"_index":499,"title":{},"body":{"classes/tile.html":{}}}],["isgameov",{"_index":80,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["isoutofflag",{"_index":81,"title":{},"body":{"components/BoardComponent.html":{}}}],["isrev",{"_index":500,"title":{},"body":{"classes/tile.html":{}}}],["isvalid",{"_index":324,"title":{},"body":{"components/UserInputComponent.html":{}}}],["it'",{"_index":178,"title":{},"body":{"components/BoardComponent.html":{}}}],["iter",{"_index":181,"title":{},"body":{"components/BoardComponent.html":{}}}],["js",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":173,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["legend",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["link",{"_index":457,"title":{},"body":{"index.html":{}}}],["live",{"_index":267,"title":{},"body":{"components/BoardComponent.html":{}}}],["make",{"_index":490,"title":{},"body":{"index.html":{}}}],["mani",{"_index":365,"title":{},"body":{"classes/board.html":{}}}],["match",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["math.floor(minut",{"_index":237,"title":{},"body":{"components/BoardComponent.html":{}}}],["math.floor(this.timercount",{"_index":234,"title":{},"body":{"components/BoardComponent.html":{}}}],["matinputmodul",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["member",{"_index":513,"title":{},"body":{"classes/tile.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["method",{"_index":86,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["mine",{"_index":179,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["minecount",{"_index":96,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["mines_plac",{"_index":386,"title":{},"body":{"classes/board.html":{}}}],["minesweep",{"_index":334,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["minut",{"_index":233,"title":{},"body":{"components/BoardComponent.html":{}}}],["miscellan",{"_index":522,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/board",{"_index":206,"title":{},"body":{"components/BoardComponent.html":{}}}],["modul",{"_index":40,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["necessari",{"_index":139,"title":{},"body":{"components/BoardComponent.html":{}}}],["need",{"_index":292,"title":{},"body":{"components/UserInputComponent.html":{}}}],["new",{"_index":151,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{}}}],["newboard",{"_index":285,"title":{},"body":{"components/UserInputComponent.html":{}}}],["newgam",{"_index":89,"title":{},"body":{"components/BoardComponent.html":{}}}],["ng2",{"_index":205,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchang",{"_index":90,"title":{},"body":{"components/BoardComponent.html":{}}}],["ngoninit",{"_index":274,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["non",{"_index":258,"title":{},"body":{"components/BoardComponent.html":{}}}],["none",{"_index":110,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["now",{"_index":296,"title":{},"body":{"components/UserInputComponent.html":{}}}],["npm",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":97,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["number",{"_index":124,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["numofcolumn",{"_index":319,"title":{},"body":{"components/UserInputComponent.html":{}}}],["numofrow",{"_index":317,"title":{},"body":{"components/UserInputComponent.html":{}}}],["object",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onc",{"_index":375,"title":{},"body":{"classes/board.html":{}}}],["onchang",{"_index":69,"title":{},"body":{"components/BoardComponent.html":{}}}],["oninit",{"_index":270,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["option",{"_index":113,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["otherwis",{"_index":167,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"classes/board.html":{},"overview.html":{}}}],["over",{"_index":174,"title":{},"body":{"components/BoardComponent.html":{}}}],["overview",{"_index":496,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":426,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":207,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["paramet",{"_index":111,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["part",{"_index":491,"title":{},"body":{"index.html":{}}}],["pass",{"_index":302,"title":{},"body":{"components/UserInputComponent.html":{}}}],["perez.s3",{"_index":466,"title":{},"body":{"index.html":{}}}],["place",{"_index":135,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["placemin",{"_index":340,"title":{},"body":{"classes/board.html":{}}}],["placenumb",{"_index":341,"title":{},"body":{"classes/board.html":{}}}],["placenumber(row",{"_index":362,"title":{},"body":{"classes/board.html":{}}}],["play",{"_index":159,"title":{},"body":{"components/BoardComponent.html":{}}}],["pop",{"_index":143,"title":{},"body":{"components/BoardComponent.html":{}}}],["post",{"_index":121,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["pre",{"_index":109,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["product",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":489,"title":{},"body":{"index.html":{}}}],["project",{"_index":446,"title":{},"body":{"index.html":{}}}],["properti",{"_index":74,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["provid",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["public",{"_index":75,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["random",{"_index":361,"title":{},"body":{"classes/board.html":{}}}],["reach",{"_index":376,"title":{},"body":{"classes/board.html":{}}}],["reactiveformsmodul",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["recurs",{"_index":370,"title":{},"body":{"classes/board.html":{}}}],["recursive_rev",{"_index":342,"title":{},"body":{"classes/board.html":{}}}],["recursive_reveal(row",{"_index":368,"title":{},"body":{"classes/board.html":{}}}],["remain",{"_index":145,"title":{},"body":{"components/BoardComponent.html":{}}}],["remov",{"_index":249,"title":{},"body":{"components/BoardComponent.html":{}}}],["repres",{"_index":189,"title":{},"body":{"components/BoardComponent.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"overview.html":{}}}],["result",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":147,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["reveal",{"_index":171,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["revealedtil",{"_index":153,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealedtilescount",{"_index":82,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealing/recurs",{"_index":379,"title":{},"body":{"classes/board.html":{}}}],["revealmin",{"_index":343,"title":{},"body":{"classes/board.html":{}}}],["revealtil",{"_index":502,"title":{},"body":{"classes/tile.html":{}}}],["right",{"_index":404,"title":{},"body":{"classes/board.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["row",{"_index":146,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["rowcount",{"_index":98,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["rxj",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["second",{"_index":238,"title":{},"body":{"components/BoardComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["set",{"_index":293,"title":{},"body":{"components/UserInputComponent.html":{}}}],["settimeout",{"_index":261,"title":{},"body":{"components/BoardComponent.html":{}}}],["setuptim",{"_index":91,"title":{},"body":{"components/BoardComponent.html":{}}}],["showboard",{"_index":283,"title":{},"body":{"components/UserInputComponent.html":{}}}],["simpl",{"_index":122,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["simpletim",{"_index":101,"title":{},"body":{"components/BoardComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["src/.../environment.prod.t",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/board/board.component.t",{"_index":67,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":125,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:116",{"_index":180,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:12",{"_index":128,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:13",{"_index":126,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":127,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:15",{"_index":194,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:16",{"_index":193,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:17",{"_index":203,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:176",{"_index":131,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:18",{"_index":196,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:19",{"_index":197,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:20",{"_index":192,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:21",{"_index":202,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:215",{"_index":169,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:22",{"_index":204,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:23",{"_index":201,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:236",{"_index":149,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:24",{"_index":200,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:25",{"_index":103,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:50",{"_index":154,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:61",{"_index":150,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:79",{"_index":161,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:96",{"_index":163,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/documentation/documentation.component.t",{"_index":269,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:12",{"_index":276,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentation/documentation.component.ts:8",{"_index":275,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/models/board.t",{"_index":335,"title":{},"body":{"classes/board.html":{},"coverage.html":{}}}],["src/app/models/board.ts:10",{"_index":345,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:123",{"_index":356,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:145",{"_index":352,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:162",{"_index":381,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:188",{"_index":369,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:37",{"_index":359,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:5",{"_index":347,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:6",{"_index":350,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:64",{"_index":363,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:7",{"_index":349,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:8",{"_index":346,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:9",{"_index":348,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/tile.t",{"_index":416,"title":{},"body":{"coverage.html":{},"classes/tile.html":{}}}],["src/app/models/tile.ts:2",{"_index":507,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:26",{"_index":514,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:3",{"_index":505,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:39",{"_index":509,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:4",{"_index":506,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:5",{"_index":504,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:6",{"_index":508,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:7",{"_index":503,"title":{},"body":{"classes/tile.html":{}}}],["src/app/us",{"_index":278,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":421,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":115,"title":{},"body":{"components/BoardComponent.html":{}}}],["start",{"_index":155,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{}}}],["startup",{"_index":166,"title":{},"body":{"components/BoardComponent.html":{}}}],["stat",{"_index":268,"title":{},"body":{"components/BoardComponent.html":{}}}],["statement",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":377,"title":{},"body":{"classes/board.html":{}}}],["stoptim",{"_index":83,"title":{},"body":{"components/BoardComponent.html":{}}}],["string",{"_index":191,"title":{},"body":{"components/BoardComponent.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["subscrib",{"_index":162,"title":{},"body":{"components/BoardComponent.html":{}}}],["subscribetim",{"_index":92,"title":{},"body":{"components/BoardComponent.html":{}}}],["support",{"_index":493,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":494,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["this.adjbomb",{"_index":520,"title":{},"body":{"classes/tile.html":{}}}],["this.board",{"_index":219,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.isgameov",{"_index":246,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.recursive_reveal(row",{"_index":257,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.revealmin",{"_index":254,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isflag",{"_index":242,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isrev",{"_index":241,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.boardformgroup",{"_index":309,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.valid",{"_index":325,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.columncount",{"_index":320,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.minecount",{"_index":323,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.rowcount",{"_index":318,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boundscheck(row",{"_index":390,"title":{},"body":{"classes/board.html":{}}}],["this.col",{"_index":519,"title":{},"body":{"classes/tile.html":{}}}],["this.colcount",{"_index":382,"title":{},"body":{"classes/board.html":{}}}],["this.columncount",{"_index":221,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["this.createform",{"_index":312,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.digitaltim",{"_index":232,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flagcount",{"_index":215,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flaggedmin",{"_index":212,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.formbuilder.group",{"_index":310,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.gameoverdialog",{"_index":247,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.haswon",{"_index":209,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.isbomb",{"_index":517,"title":{},"body":{"classes/tile.html":{}}}],["this.isflag",{"_index":518,"title":{},"body":{"classes/tile.html":{}}}],["this.isgameov",{"_index":211,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["this.isrev",{"_index":516,"title":{},"body":{"classes/tile.html":{}}}],["this.minecount",{"_index":216,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.newboard",{"_index":331,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.newgam",{"_index":214,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.num",{"_index":333,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.recursive_reveal(row",{"_index":399,"title":{},"body":{"classes/board.html":{}}}],["this.revealedtilescount",{"_index":217,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.row",{"_index":384,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["this.rowcount",{"_index":332,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.rows[row",{"_index":392,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col",{"_index":405,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isbomb",{"_index":388,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isflag",{"_index":396,"title":{},"body":{"classes/board.html":{}}}],["this.setuptim",{"_index":218,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.showboard",{"_index":311,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.st.newtimer('tim",{"_index":225,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.subscribe('tim",{"_index":229,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.unsubscribe(this.timerid",{"_index":228,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.stoptim",{"_index":210,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.subscribetim",{"_index":227,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tilesrev",{"_index":383,"title":{},"body":{"classes/board.html":{}}}],["this.timercount",{"_index":222,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.timerid",{"_index":223,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.updatetim",{"_index":230,"title":{},"body":{"components/BoardComponent.html":{}}}],["tile",{"_index":134,"title":{"classes/tile.html":{}},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["tile'",{"_index":511,"title":{},"body":{"classes/tile.html":{}}}],["tilecheck",{"_index":93,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilecheck(row",{"_index":168,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilesrev",{"_index":337,"title":{},"body":{"classes/board.html":{}}}],["time",{"_index":120,"title":{},"body":{"components/BoardComponent.html":{}}}],["timer",{"_index":106,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["timercount",{"_index":84,"title":{},"body":{"components/BoardComponent.html":{}}}],["timerid",{"_index":85,"title":{},"body":{"components/BoardComponent.html":{}}}],["top",{"_index":391,"title":{},"body":{"classes/board.html":{}}}],["transfer",{"_index":295,"title":{},"body":{"components/UserInputComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["tri",{"_index":250,"title":{},"body":{"components/BoardComponent.html":{}}}],["true",{"_index":243,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":112,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["unclick",{"_index":464,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":224,"title":{},"body":{"components/BoardComponent.html":{}}}],["unsubscrib",{"_index":164,"title":{},"body":{"components/BoardComponent.html":{}}}],["up",{"_index":144,"title":{},"body":{"components/BoardComponent.html":{}}}],["updat",{"_index":187,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["updatetim",{"_index":94,"title":{},"body":{"components/BoardComponent.html":{}}}],["us",{"_index":117,"title":{},"body":{"components/BoardComponent.html":{}}}],["user",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["userinputcompon",{"_index":34,"title":{"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":156,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["validateform",{"_index":286,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(1",{"_index":316,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(2",{"_index":313,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.pattern('^\\\\d",{"_index":315,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.requir",{"_index":314,"title":{},"body":{"components/UserInputComponent.html":{}}}],["valu",{"_index":183,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["variabl",{"_index":105,"title":{"miscellaneous/variables.html":{}},"body":{"components/BoardComponent.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":449,"title":{},"body":{"index.html":{}}}],["void",{"_index":148,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["want",{"_index":360,"title":{},"body":{"classes/board.html":{}}}],["wasn't",{"_index":256,"title":{},"body":{"components/BoardComponent.html":{}}}],["west",{"_index":467,"title":{},"body":{"index.html":{}}}],["while(mines_plac",{"_index":387,"title":{},"body":{"classes/board.html":{}}}],["win",{"_index":107,"title":{},"body":{"components/BoardComponent.html":{}}}],["within",{"_index":357,"title":{},"body":{"classes/board.html":{}}}],["work",{"_index":451,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BoardComponent\n                            \n                            \n                                DocumentationComponent\n                            \n                            \n                                UserInputComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UserInputComponent } from './user-input/user-input.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material';\nimport { BoardComponent } from './board/board.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserInputComponent,\n    BoardComponent,\n    DocumentationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                digitalTimer\n                            \n                            \n                                flagCount\n                            \n                            \n                                flaggedMines\n                            \n                            \n                                hasWon\n                            \n                            \n                                isGameOver\n                            \n                            \n                                isOutOfFlags\n                            \n                            \n                                revealedTilesCount\n                            \n                            \n                                stopTimer\n                            \n                            \n                                timerCount\n                            \n                            \n                                timerID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flagCheck\n                            \n                            \n                                gameOverDialog\n                            \n                            \n                                newGame\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setupTimer\n                            \n                            \n                                subscribeTimer\n                            \n                            \n                                tileCheck\n                            \n                            \n                                updateTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(st: SimpleTimer)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n                \n                    \n                            Initializes variables for timer and winning conditions\nPre: None\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                  \n                                                        \n                                                                    SimpleTimer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular class used to display the game time\nPost: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mineCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        num\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:176\n                            \n                        \n\n\n                \n                    \n                            Checks all conditions on current tile, places flag and adjusts flag count as necessary. \nPre: The board exists.\nPost: flag is placed if allowed, if not alert will pop up if not flags remaining.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \ngameOverDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:236\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Initializes properties for a new game\nPre: User input has changed\nPost: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Starts a new game\nPre: User provides valid information and clicks \"play game\"\nPost: newGame is called, initializes properties for new game\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Resets timerCount and subscribes the timer\nPre: newGame has been called\nPost: timerCount is reset and the timer is subscribed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribeTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubscribeTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes timer on application startup, subscribes timer when called otherwise\nPre: setupTimer has been called\nPost: Timer is unsubscribed on application startup, timer is subscribed otherwise\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \ntileCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:215\n                            \n                        \n\n\n                \n                    \n                            Determines revealing behavior of a left-clicked tile\nPre: User left-clicks a tile and game is not over\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile being flagged\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile being flagged\nPost tile is revealed, game ends if it's a mine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Iterates the timerCount, converts value to a digital clock format, updates digitalTimer\nPre: Timer has been subscribed\nPost: timerCount has been iterated, digitalTimer correctly represents the time elapsed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            board\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        board:     board\n\n                    \n                \n                    \n                        \n                            Type :     board\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            digitalTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        digitalTimer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flagCount:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flaggedMines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flaggedMines:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasWon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasWon:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutOfFlags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOutOfFlags:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealedTilesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revealedTilesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stopTimer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnChanges, Input } from '@angular/core';\nimport { SimpleTimer } from 'ng2-simple-timer';\nimport { board } from '../models/board';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent implements OnChanges {\n  @Input() columnCount: number;\n  @Input() rowCount: number;\n  @Input() mineCount: number;\n  @Input() num: number;\n  flaggedMines: number;\n  flagCount;\n  timerCount: number;\n  hasWon: boolean;\n  isGameOver: boolean;\n  digitalTimer: string;\n  stopTimer: boolean;\n  timerID: string;\n  revealedTilesCount: number;\n  isOutOfFlags = false;\n  public board: board;\n\n  /**\n   * Initializes variables for timer and winning conditions\n   * \n   * Pre: None\n   * \n   * @param st angular class used to display the game time\n   * \n   * Post: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized\n   */\n  constructor(private st: SimpleTimer) {\n    this.hasWon = false;\n    this.stopTimer = false;\n    this.isGameOver = false;\n    this.flaggedMines = 0;\n  }\n\n    /**\n   * Starts a new game\n   * \n   * Pre: User provides valid information and clicks \"play game\"\n   * \n   * Post: newGame is called, initializes properties for new game\n   */\n  ngOnChanges() {\n    this.newGame();\n  }\n\n  /**\n   * Initializes properties for a new game\n   * \n   * Pre: User input has changed\n   * \n   * Post: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized\n   */\n  newGame() {\n    this.flagCount = this.mineCount; //Initialize flagCount\n    this.isGameOver = false;\n    this.hasWon = false;\n    this.flaggedMines = 0;\n    this.revealedTilesCount = 0;\n    this.setupTimer();\n    this.board = new board(this.rowCount, this.columnCount, this.mineCount);\n    \n  }\n\n  /**\n   * Resets timerCount and subscribes the timer\n   * \n   * Pre: newGame has been called\n   * \n   * Post: timerCount is reset and the timer is subscribed\n   */\n  setupTimer() {\n    this.stopTimer = false;\n    this.timerCount = 0; //Reset timer count\n    if (this.timerID == undefined) //If timer has not been subscribed\n    {\n      this.st.newTimer('Timer', 1);\n      this.subscribeTimer();\n    }\n  }\n\n  /**\n   * Unsubscribes timer on application startup, subscribes timer when called otherwise\n   * \n   * Pre: setupTimer has been called\n   * \n   * Post: Timer is unsubscribed on application startup, timer is subscribed otherwise\n   */\n  subscribeTimer() {\n    if (this.mineCount == 0) //Application startup\n    {\n      this.st.unsubscribe(this.timerID);\n      this.timerID = undefined;\n    }\n    else\n    {\n      this.stopTimer = false;\n      this.timerID = this.st.subscribe('Timer', () => this.updateTimer());\n    }\n  }\n\n  /**\n   * Iterates the timerCount, converts value to a digital clock format, updates digitalTimer\n   * \n   * Pre: Timer has been subscribed\n   * \n   * Post: timerCount has been iterated, digitalTimer correctly represents the time elapsed\n   */\n  updateTimer()\n  {\n    if(!this.stopTimer) {\n      this.timerCount++;\n\n      /////////////////////Update digital timer string/////////////////////\n\n      this.digitalTimer = \"\"; //Reset value\n\n      //Initializations\n      let minutes = Math.floor(this.timerCount / 60);\n      let hours = Math.floor(minutes / 60);\n      if (hours > 0)\n      {\n        minutes = minutes - hours * 60;\n      }\n      let seconds = this.timerCount % 60;\n\n      //If time has exeeded 1 hour\n      if (hours != 0)\n      {\n        this.digitalTimer += hours + \":\"; //Add hours\n\n        if (minutes  0 && !this.board.rows[row][col].isRevealed) { // place flag\n        this.board.rows[row][col].isFlagged = true;\n        this.flagCount--;\n        if(this.board.rows[row][col].isBomb) {\n          this.flaggedMines++;\n        }\n        if(this.flaggedMines === this.mineCount) { // check for win\n          this.hasWon = true;\n          this.isGameOver = true;\n          this.board.isGameOver = true;\n          this.gameOverDialog();\n        }\n      }\n      else if (this.flagCount === 0 && !this.board.rows[row][col].isRevealed) {\n        alert(\"No flags remaining, remove a flag and try again.\");\n      }\n    }\n  }\n\n    /**\n   * Determines revealing behavior of a left-clicked tile\n   * \n   * Pre: User left-clicks a tile and game is not over\n   * \n   * @param row The row of the tile being flagged\n   * \n   * @param col The column of the tile being flagged\n   * \n   * Post tile is revealed, game ends if it's a mine\n   */\n  tileCheck(row: number, col: number) {\n    if(!this.isGameOver) {\n      if(this.board.rows[row][col].isBomb) { // bomb was clicked, end game\n        this.board.revealMines();\n        this.isGameOver = true;\n        this.gameOverDialog();\n      }\n      else if(this.board.rows[row][col].isFlagged) { // flagged tile was clicked but wasn't a bomb\n        this.board.rows[row][col].isFlagged = false;\n        this.board.rows[row][col].isRevealed = true;\n        this.flagCount++;\n        this.board.recursive_reveal(row, col);\n      }\n      else { // non-flag, non-bomb tile was clicked, reveal tile\n        this.board.rows[row][col].isRevealed = true;\n        this.board.recursive_reveal(row, col);\n      }\n    }\n  }\n  \n  // Checks all conditions of the board and calculates if the game is complete.\n  gameOverDialog(): void {\n    this.stopTimer = true;\n    if (this.hasWon) {\n      setTimeout(() => alert(\"Congratulations! You win!\"), 500);\n    }\n    else {\n      setTimeout(() => alert(\"We all encounter failures in our lives.\"), 500);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        Timer\n        \n    \n\n    \n        Flags\n        \n    \n\n    \n        \n            \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n        Stats\n        Mines Flagged: {{flaggedMines}}\n        Time: {{digitalTimer}} \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Timer                        Flags                                                                                                                                                                                                                                                                                                                                                        Stats        Mines Flagged: {{flaggedMines}}        Time: {{digitalTimer}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                documentation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/documentation/documentation.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.css']\n})\nexport class DocumentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    Documentation\n    \n  \n\n  \n    Source Code\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Documentation            Source Code      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInputComponent.html":{"url":"components/UserInputComponent.html","title":"component - UserInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-input/user-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-input\n            \n\n            \n                styleUrls\n                user-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardFormGroup\n                            \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                            \n                                showBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                newBoard\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-input/user-input.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Creates validators for the inputs that need to be checked.\nPre: none.\nPost: ColumnCount, RowCount, and MineCount validators are set.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewBoard()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Transfers all user inputs to the board.\nPre: Inputs have been validated.\nPost: board now has correct column, row, and mine count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Validates user inputs and provides dialog feedback when the user does not pass correct input. \nCalls new board when input has been validated.\nPre: User has provided input.\nPost: newBoard is called after valid input.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boardFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        boardFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columnCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            num\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        num:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBoard:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-user-input',\n  templateUrl: './user-input.component.html',\n  styleUrls: ['./user-input.component.css']\n})\nexport class UserInputComponent implements OnInit {\n\n  boardFormGroup: FormGroup;\n  columnCount: number = 0;\n  rowCount: number = 0;\n  mineCount: number = 0;\n  showBoard: boolean;\n  num: number = 0;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.boardFormGroup = this.formBuilder.group({});\n    this.showBoard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n   /**\n   * Creates validators for the inputs that need to be checked.\n   * \n   * Pre: none.\n   * \n   * Post: ColumnCount, RowCount, and MineCount validators are set.\n   */\n  createForm(): void {\n    this.boardFormGroup = this.formBuilder.group({\n      ColumnCount: ['', Validators.compose([Validators.min(2), Validators.required, Validators.pattern('^\\\\d+$')])],\n      RowCount: ['', Validators.compose([Validators.min(2), Validators.required, Validators.pattern('^\\\\d+$')])],\n      MineCount: ['', Validators.compose([Validators.min(1), Validators.required, Validators.pattern('^\\\\d+$')])],\n    });\n  }\n\n   /**\n   * Validates user inputs and provides dialog feedback when the user does not pass correct input. \n   * Calls new board when input has been validated.\n   * \n   * Pre: User has provided input.\n   * \n   * Post: newBoard is called after valid input.\n   */\n  validateForm(): void {\n    var numOfRows = this.boardFormGroup.value.RowCount;\n    var numOfColumns = this.boardFormGroup.value.ColumnCount;\n    var cellCount = numOfRows * numOfColumns;\n    var bombCount = this.boardFormGroup.value.MineCount;\n    var isValid = this.boardFormGroup.valid && bombCount = 2 && numOfColumns >= 2 && numOfRows = 1 && bombCount  2499)\n      {\n        alert('Cell count cannot exceed 2500');\n      }\n    }\n    else\n    {\n      this.newBoard();\n    }\n  }\n\n   /**\n   * Transfers all user inputs to the board.\n   * \n   * Pre: Inputs have been validated.\n   * \n   * Post: board now has correct column, row, and mine count.\n   */\n  newBoard() {\n    this.columnCount = this.boardFormGroup.value.ColumnCount;\n    this.rowCount = this.boardFormGroup.value.RowCount;\n    this.mineCount= this.boardFormGroup.value.MineCount;\n    this.showBoard = true;\n    this.num = this.num + 1;\n  }\n}\n\n    \n\n    \n        \n  Minesweeper\n\n\n\n\n    \n      \n        Columns\n        \n      \n\n      \n        Rows\n        \n      \n\n      \n        Mines\n        \n      \n    \n\n    \n    New Game\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Minesweeper                  Columns                            Rows                            Mines                          New Game'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/board.html":{"url":"classes/board.html","title":"class - board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/board.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colCount\n                            \n                            \n                                    Public\n                                isGameOver\n                            \n                            \n                                    Public\n                                mineCount\n                            \n                            \n                                    Public\n                                rowCount\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                tilesRevealed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bombCheck\n                            \n                            \n                                boundsCheck\n                            \n                            \n                                placeMines\n                            \n                            \n                                placeNumber\n                            \n                            \n                                recursive_reveal\n                            \n                            \n                                revealMines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rows: number, cols: number, mines: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/board.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cols\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mines\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tilesRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tilesRevealed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bombCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nbombCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:145\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is a bomb\nPre: There must be a board in existence\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked\nPost: Checks if there is a bomb at the given coordinate\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boundsCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nboundsCheck(row: , col: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:123\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is within the bounds of the board\nPre: There must be a board in existence\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked\nPost: Returns true if the tile is within the bounds of the board, returns false otherwise\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:37\n                            \n                        \n\n\n                \n                    \n                            Given the number of mines the user wanted, places mines at random coordinates\nPre: There must be a board in existence\nPost: Places the user-defined number of mines \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceNumber(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:64\n                            \n                        \n\n\n                \n                    \n                            Calculates what number to place in every tile, then places the correct number according to how many bombs are adjacent to that tile\nPre: There must be a board in existence\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile that was clicked\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile that was clicked\nPost: Calculates adjacent bombs to any given tile and places numbers accordingly\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recursive_reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecursive_reveal(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:188\n                            \n                        \n\n\n                \n                    \n                            Clicking on a tile calls the recursive reveal function, the function then reveals tiles\nfanning out in every direction if they are empty or contain a number. Once the function \nreaches a numbered tile, the recursion stops.\nPre: There must be a board in existence\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the clicked tile\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the clicked tile\nPost: When a tile is clicked, tiles fanning out from the clicked tile are revealed.\nIf the function hits a number in any direction, the revealing/recursion ceases.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:162\n                            \n                        \n\n\n                \n                    \n                            After the user hits a bomb and the game ends, all of the mines are revealed.\nPre There must be a board in existence\nPost: If the user hits a bomb and ends the game, reveals all the mines\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { tile } from \"./tile\";\n\nexport class board\n{\n    public isGameOver: boolean;\n    public rows: any[];\n    public rowCount: number;\n    public colCount: number;\n    public mineCount: number;\n    public tilesRevealed: number;\n\n    constructor(rows: number, cols: number, mines: number) {\n        this.rowCount = rows;\n        this.colCount = cols;\n        this.mineCount = mines;\n        this.tilesRevealed = 0;\n        this.isGameOver = false;\n        this.rows = [];\n        for (let i = 0; i  event.preventDefault());\n    }\n\n    /**\n     * Given the number of mines the user wanted, places mines at random coordinates\n     * \n     * Pre: There must be a board in existence\n     *\n     * Post: Places the user-defined number of mines \n     */\n    placeMines()\n    {\n      let mines_placed = 0;\n      while(mines_placed  this.rowCount-1 || col  this.colCount-1) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n\n  /**\n   * For a given tile at coordinates (row, col), checks if the tile is a bomb\n   * \n   * Pre: There must be a board in existence\n   * \n   * @param row The row of the coordinate to be checked\n   * \n   * @param col The column of the coordinate to be checked\n   * \n   * Post: Checks if there is a bomb at the given coordinate\n   */\n  bombCheck(row: number, col: number): boolean {\n    if (this.rows[row][col].isBomb) {\n      return true\n    } \n    else {\n      return false;\n    }\n  }\n\n\n  /**\n   * After the user hits a bomb and the game ends, all of the mines are revealed.\n   * \n   * Pre There must be a board in existence\n   * \n   * Post: If the user hits a bomb and ends the game, reveals all the mines\n   */\n  revealMines() {\n      for(let i = 0; i  0) && !this.isGameOver)\n    {\n      if (this.boundsCheck(row - 1, col - 1)) { // top left tile\n        if (!this.rows[row - 1][col - 1].isBomb && !this.rows[row - 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col - 1].adjBombs > 0) {\n\n            this.rows[row - 1][col - 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col - 1].revealTile();\n            this.recursive_reveal(row - 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col)) { // top tile\n        if (!this.rows[row - 1][col].isBomb && !this.rows[row - 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col].adjBombs > 0){\n            \n            this.rows[row - 1][col].revealTile();\n\n            \n          }\n          else{\n            this.rows[row - 1][col].revealTile();\n            this.recursive_reveal(row - 1, col);\n            \n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col + 1)) { // top right tile\n        if (!this.rows[row - 1][col + 1].isBomb && !this.rows[row - 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col + 1].adjBombs > 0) {\n\n            this.rows[row - 1][col + 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col + 1].revealTile();\n            this.recursive_reveal(row - 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n      if (this.boundsCheck(row, col - 1)) { // left tile \n        if (!this.rows[row][col - 1].isBomb && !this.rows[row][col - 1].isRevealed && !this.rows[row][col].isFlagged){\n          if (this.rows[row][col - 1].adjBombs > 0) {\n            this.rows[row][col - 1].revealTile();\n            \n          }\n          else {\n            this.rows[row][col - 1].revealTile();\n            this.recursive_reveal(row, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row, col + 1)) { // right tile\n        if (!this.rows[row][col + 1].isBomb && !this.rows[row][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row][col + 1].adjBombs > 0) {\n            this.rows[row][col + 1].revealTile();\n          }\n          else {\n            this.rows[row][col + 1].revealTile();\n            this.recursive_reveal(row, col + 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n    if (this.boundsCheck(row + 1, col)) { // bottom tile\n      if (!this.rows[row + 1][col].isBomb && !this.rows[row + 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col].adjBombs > 0) {\n            this.rows[row + 1][col].revealTile();\n          }\n          else {\n            this.rows[row + 1][col].revealTile();\n            this.recursive_reveal(row + 1, col);\n          }\n        this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col - 1)) { // bottom left tile\n        if (!this.rows[row + 1][col - 1].isBomb && !this.rows[row + 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col - 1].adjBombs > 0) {\n\n            this.rows[row + 1][col - 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col - 1].revealTile();\n            this.recursive_reveal(row + 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col + 1)) { // bottom right tile\n        if (!this.rows[row + 1][col + 1].isBomb && !this.rows[row + 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col + 1].adjBombs > 0) {\n\n            this.rows[row + 1][col + 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col + 1].revealTile();\n            this.recursive_reveal(row + 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            \n                component\n            \n            \n                BoardComponent\n            \n            \n                32 %\n                (8/25)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            \n                component\n            \n            \n                DocumentationComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/board.ts\n            \n            \n                class\n            \n            \n                board\n            \n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/models/tile.ts\n            \n            \n                class\n            \n            \n                tile\n            \n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/user-input/user-input.component.ts\n            \n            \n                component\n            \n            \n                UserInputComponent\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            ng2-simple-timer : ^6.0.0\n        \n            npm : ^6.4.1\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMinesweeper\nThis project was generated with Angular CLI version 6.1.5.\nWorks Cited\nTimer\nhttps://www.npmjs.com/package/ng2-simple-timer\nDocumentation generator\nhttps://compodoc.github.io/compodoc/\nFavicon\nhttps://fontawesome.com/icons/bomb?style=solid\nDocumentation Link Icon\nhttps://fontawesome.com/v4.7.0/icon/book\nGithub Link Icon\nhttps://fontawesome.com/v4.7.0/icon/github\nFont\nhttps://fonts.google.com/specimen/Jura\nIcons\nUnclicked Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/covered.png\nEmpty Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/empty.png\nMine - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/mine.png\n1 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-1.png\n2 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-2.png\n3 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-3.png\n4 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-4.png\n5 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-5.png\n6 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-6.png\n7 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-7.png\n8 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-8.png\nInspiration\nhttp://www.simplygoodcode.com/2014/04/angularjs-game-programming-making-minesweeper-part-ii/index.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/tile.html":{"url":"classes/tile.html","title":"class - tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tile.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjBombs\n                            \n                            \n                                col\n                            \n                            \n                                isBomb\n                            \n                            \n                                isFlagged\n                            \n                            \n                                isRevealed\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flagTile\n                            \n                            \n                                revealTile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tile.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjBombs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adjBombs:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            col\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBomb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBomb:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFlagged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFlagged:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isRevealed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        row:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:39\n                            \n                        \n\n\n                \n                    \n                            Flags the clicked(right click) on tile and updates the tile's image\nPre: There must be a board in existence\nPost: Changes member variables and the image of the tile \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:26\n                            \n                        \n\n\n                \n                    \n                            Reveals the clicked on tile and updates the tile's member variables and image\nPre: There must be a board in existence\nPost: Reveals the tile if it is not already revealed, changes member variables accordingly\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class tile {\n    isRevealed: boolean;\n    isBomb: boolean;\n    isFlagged: boolean;\n    adjBombs: number;\n    row: number;\n    col: number;\n\n\n    constructor(row: number, col: number) {\n        this.isRevealed = false;\n        this.isBomb = false;\n        this.isFlagged = false;\n        this.row = row;\n        this.col = col;\n        this.adjBombs = 0;\n    }\n    \n    /**\n     * Reveals the clicked on tile and updates the tile's member variables and image\n     * \n     * Pre: There must be a board in existence\n     * \n     * Post: Reveals the tile if it is not already revealed, changes member variables accordingly\n     */\n    revealTile() {\n        if (this.isRevealed === false && !this.isFlagged){\n            this.isRevealed = true;\n        }\n    }\n\n    /**\n     * Flags the clicked(right click) on tile and updates the tile's image\n     * \n     * Pre: There must be a board in existence\n     * \n     * Post: Changes member variables and the image of the tile \n     */\n    flagTile(){\n        if(this.isFlagged === false){\n            this.isFlagged = true;\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
