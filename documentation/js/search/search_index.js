var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.3,1,0.521]],["body/components/AppComponent.html",[0,0.567,1,0.958,2,0.868,3,0.868,4,1.579,5,1.579,6,1.579,7,0.694,8,2.396,9,1.579,10,2.276,11,2.276,12,3.807,13,1.934,14,3.807,15,1.934,16,3.807,17,1.067,18,0.076,19,1.067,20,0.694,21,0.274,22,1.067,23,1.934,24,1.934,25,1.592,26,2.18,27,1.579,28,1.308,29,1.579,30,0.694,31,1.579,32,0.694,33,1.579,34,0.694,35,1.067,36,1.579,37,1.579,38,0.062,39,0.062]],["title/modules/AppModule.html",[40,0.976,41,1.185]],["body/modules/AppModule.html",[1,1.032,2,0.78,3,0.78,7,0.624,17,1.556,18,0.078,19,0.959,20,0.795,21,0.246,22,0.959,30,0.974,32,0.974,34,0.974,35,0.959,38,0.058,39,0.058,40,1.489,41,2.359,42,1.418,43,3.024,44,3.024,45,1.809,46,2.153,47,2.153,48,2.153,49,2.746,50,1.733,51,1.733,52,2.792,53,3.56,54,2.153,55,1.733,56,3.56,57,2.792,58,1.733,59,2.792,60,3.56,61,3.56,62,1.733,63,3.56,64,2.153,65,2.792,66,2.792]],["title/components/BoardComponent.html",[0,0.3,30,0.521]],["body/components/BoardComponent.html",[0,0.406,1,0.223,2,0.279,3,0.279,4,0.507,5,0.507,6,0.507,7,0.223,9,0.507,10,1.51,11,1.51,13,0.843,15,0.843,17,0.731,18,0.079,19,0.343,20,0.223,21,0.146,22,0.343,23,0.843,24,0.843,25,0.694,26,1.26,27,0.507,28,0.946,29,0.507,30,0.554,31,0.507,32,0.223,33,0.507,34,0.223,35,1.175,36,1.793,37,0.507,38,0.027,39,0.027,45,0.843,50,1.844,67,0.77,68,1.03,69,2.129,70,1.297,71,1.659,72,1.659,73,0.279,74,1.51,75,1.642,76,3.529,77,3.149,78,3.529,79,3.297,80,2.543,81,2.481,82,2.481,83,2.971,84,3.703,85,2.481,86,0.694,87,1.659,88,2.481,89,3.297,90,2.481,91,2.971,92,2.481,93,1.659,94,2.481,95,1.642,96,1.321,97,1.642,98,1.321,99,0.417,100,0.998,101,2.753,102,1.767,103,1.659,104,3.297,105,0.694,106,2.675,107,2.481,108,2.129,109,2.029,110,1.28,111,2.029,112,1.321,113,2.481,114,1.082,115,1.356,116,1.082,117,1.659,118,2.18,119,0.998,120,0.998,121,0.998,122,0.998,123,0.998,124,2.046,125,0.998,126,1.03,127,0.998,128,1.318,129,1.642,130,3.079,131,0.998,132,1.28,133,0.998,134,0.619,135,0.998,136,0.998,137,0.998,138,0.998,139,1.659,140,1.399,141,1.379,142,1.431,143,0.998,144,1.659,145,1.659,146,2.124,147,2.029,148,1.659,149,1.28,150,1.659,151,1.659,152,1.659,153,1.659,154,0.998,155,1.954,156,1.28,157,1.659,158,0.998,159,1.28,160,1.28,161,1.659,162,2.124,163,1.659,164,2.046,165,0.998,166,3.622,167,0.998,168,2.481,169,2.753,170,2.753,171,1.913,172,1.659,173,0.998,174,1.659,175,1.709,176,1.659,177,1.913,178,1.659,179,1.659,180,1.26,181,0.77,182,2.481,183,1.03,184,0.998,185,2.481,186,1.659,187,1.54,188,2.129,189,1.659,190,1.659,191,1.642,192,1.659,193,1.659,194,2.971,195,2.129,196,3.149,197,0.998,198,0.998,199,0.998,200,1.739,201,0.998,202,0.998,203,0.619,204,1.476,205,0.998,206,0.998,207,0.998,208,0.998,209,0.998,210,0.77,211,0.998,212,1.642,213,0.77,214,0.998,215,0.998,216,0.77,217,2.481,218,2.481,219,1.913,220,2.129,221,1.431,222,0.998,223,2.481,224,1.54,225,0.998,226,0.998,227,0.998,228,0.998,229,0.77,230,2.129,231,2.129,232,1.659,233,0.998,234,0.694,235,0.998,236,0.998,237,0.998,238,0.998,239,0.998,240,1.659,241,2.481,242,0.998,243,2.481,244,3.149,245,0.998,246,0.998,247,0.998,248,0.998,249,2.481,250,1.659,251,1.379,252,1.659,253,0.998,254,0.998,255,1.659,256,0.998,257,0.998,258,0.998,259,0.998,260,0.998,261,1.642,262,0.998,263,0.998,264,0.998,265,1.659,266,1.659,267,1.659,268,0.998,269,1.659,270,0.998,271,0.998,272,0.998,273,0.998,274,1.659]],["title/components/DocumentationComponent.html",[0,0.3,32,0.521]],["body/components/DocumentationComponent.html",[0,0.555,1,0.646,2,0.808,3,1.114,4,1.47,5,1.47,6,1.47,7,0.646,9,1.47,10,2.237,11,2.237,13,1.851,15,1.851,17,0.994,18,0.077,19,0.994,20,0.646,21,0.255,22,0.994,23,1.851,24,1.851,25,1.523,26,2.126,27,1.47,28,1.251,29,1.47,30,0.646,31,1.47,32,0.935,33,1.47,34,0.646,35,0.994,36,1.47,37,1.47,38,0.059,39,0.059,68,2.26,73,0.808,86,1.523,99,1.667,102,1.523,141,1.21,142,1.21,275,2.231,276,3.074,277,2.596,278,3.642,279,3.642,280,3.227,281,2.893,282,2.893,283,3.642]],["title/components/UserInputComponent.html",[0,0.3,34,0.521]],["body/components/UserInputComponent.html",[0,0.449,1,0.359,2,0.449,3,0.449,4,0.817,5,0.817,6,0.817,7,0.359,9,0.817,10,1.86,11,1.86,13,1.231,15,1.231,17,0.832,18,0.078,19,0.552,20,0.359,21,0.142,22,0.552,23,1.231,24,1.231,25,1.014,26,2.033,27,0.817,28,1.002,29,0.817,30,0.359,31,0.817,32,0.359,33,0.817,34,0.725,35,1.485,36,2.253,37,0.817,38,0.039,39,0.039,45,1.649,58,2.604,62,0.998,68,1.504,70,1.257,73,0.449,74,1.231,86,1.014,95,2.93,96,2.358,97,2.504,98,2.358,99,0.673,102,1.732,109,1.86,110,1.869,111,1.86,114,0.817,115,1.305,116,0.817,118,2.132,126,1.504,132,2.249,140,1.649,141,1.358,142,1.589,147,1.231,155,2.015,160,3.273,164,2.015,180,1.649,183,2.015,187,2.015,200,1.482,203,2.015,204,0.673,216,1.24,221,1.635,224,0.998,229,1.24,234,1.014,251,0.673,276,2.249,280,2.504,284,3.236,285,1.24,286,2.423,287,2.423,288,3.246,289,3.246,290,3.246,291,3.66,292,3.246,293,1.608,294,3.66,295,2.423,296,1.608,297,2.423,298,2.423,299,2.423,300,1.608,301,2.423,302,2.423,303,2.504,304,1.608,305,1.608,306,2.423,307,2.423,308,2.423,309,3.246,310,1.608,311,1.608,312,1.608,313,1.608,314,1.608,315,2.423,316,2.423,317,2.423,318,1.608,319,2.423,320,2.916,321,2.916,322,1.608,323,2.916,324,2.423,325,2.916,326,2.423,327,1.608,328,2.916,329,2.423,330,1.608,331,1.608,332,1.504,333,1.608,334,1.608,335,1.608,336,1.608,337,1.608,338,1.24,339,2.423,340,1.869]],["title/classes/board.html",[21,0.205,70,0.801]],["body/classes/board.html",[2,0.315,3,0.315,7,0.252,17,0.388,18,0.079,20,0.252,21,0.162,25,0.768,28,1.01,35,1.189,38,0.03,39,0.03,51,1.139,70,1.342,73,0.315,74,0.933,75,3.195,80,2.062,86,0.768,96,1.659,98,1.659,99,0.472,102,1.68,109,1.819,111,1.819,114,1.495,115,1.264,116,1.495,118,2.324,124,2.776,126,2.337,128,1.518,129,2.562,134,2.222,140,2.122,141,1.606,142,1.118,146,2.062,147,1.358,149,0.871,162,2.062,164,0.7,171,0.871,175,2.062,177,1.79,180,2.014,181,2.062,183,1.825,200,1.602,204,1.118,212,1.416,219,1.416,221,1.634,224,0.7,234,1.821,251,0.971,261,2.838,303,0.871,338,1.416,341,0.871,342,2.673,343,2.673,344,1.836,345,1.836,346,2.673,347,1.836,348,1.836,349,2.673,350,1.416,351,1.836,352,1.129,353,1.129,354,1.129,355,1.129,356,1.129,357,1.836,358,1.129,359,3.462,360,3.906,361,1.129,362,1.129,363,1.836,364,1.836,365,1.129,366,1.836,367,1.836,368,1.129,369,1.129,370,1.836,371,1.129,372,1.129,373,1.836,374,0.871,375,1.129,376,1.129,377,1.836,378,2.673,379,1.836,380,0.871,381,1.129,382,1.129,383,1.129,384,2.941,385,1.129,386,1.129,387,1.129,388,1.836,389,3.58,390,0.871,391,1.129,392,1.129,393,1.129,394,1.129,395,1.129,396,3.462,397,2.32,398,4.42,399,4.208,400,3.152,401,3.152,402,3.462,403,3.152,404,3.841,405,3.462,406,1.836,407,1.836,408,1.836,409,2.673,410,2.32,411,3.68,412,2.32]],["title/coverage.html",[413,2.44]],["body/coverage.html",[0,0.56,1,0.721,7,0.721,8,2.488,18,0.076,21,0.343,30,0.721,32,0.721,34,0.721,38,0.063,39,0.063,58,2.002,67,2.488,70,1.108,105,1.629,115,1.108,128,1.108,155,2.002,221,1.818,275,2.488,277,2.002,284,2.488,285,2.488,341,2.488,413,2.488,414,3.226,415,3.226,416,4.184,417,3.226,418,3.226,419,3.226,420,3.226,421,3.226,422,2.488,423,3.226,424,3.226,425,3.226,426,3.226,427,2.488,428,3.004,429,2.488,430,3.226,431,3.226]],["title/dependencies.html",[42,1.423,432,1.957]],["body/dependencies.html",[18,0.078,19,1.118,38,0.064,39,0.064,42,1.654,54,3.021,55,2.431,62,2.02,64,2.511,106,2.02,112,2.02,210,2.511,433,3.255,434,4.651,435,3.255,436,3.916,437,3.255,438,3.255,439,3.255,440,3.255,441,3.255,442,3.255,443,3.255,444,3.255,445,3.916,446,3.255,447,3.255,448,3.255,449,3.255,450,3.255]],["title/index.html",[73,0.547,159,1.51,451,1.957]],["body/index.html",[18,0.058,38,0.058,39,0.058,106,2.221,112,1.746,128,1.229,147,1.43,180,1.43,213,2.17,234,1.177,277,2.221,332,1.746,340,3.584,380,2.17,452,2.813,453,3.578,454,2.813,455,2.813,456,2.813,457,2.813,458,2.813,459,2.813,460,2.813,461,2.813,462,2.813,463,3.578,464,3.935,465,2.813,466,2.813,467,2.813,468,2.813,469,2.813,470,2.813,471,4.602,472,4.602,473,4.602,474,4.602,475,2.813,476,2.813,477,2.813,478,4.494,479,2.813,480,2.813,481,2.813,482,2.813,483,2.17,484,2.813,485,2.813,486,2.813,487,2.813,488,2.813,489,2.813,490,2.813,491,2.813,492,2.813,493,2.813,494,2.813,495,2.813,496,2.813,497,2.813,498,2.813]],["title/modules.html",[40,1.323]],["body/modules.html",[18,0.068,38,0.068,39,0.068,40,1.533,41,1.862,55,2.274,499,3.664,500,3.664,501,3.664]],["title/overview.html",[502,2.44]],["body/overview.html",[0,0.421,1,1.024,18,0.075,20,0.731,21,0.288,22,1.123,30,0.94,32,0.94,34,0.94,38,0.064,39,0.064,40,1.643,41,2.388,42,1.662,43,2.522,44,2.522,45,1.662,46,2.522,47,2.522,48,2.522,49,3.029,50,2.03,51,2.03,234,1.368,332,2.03,483,2.522,502,2.522]],["title/classes/tile.html",[21,0.205,128,0.801]],["body/classes/tile.html",[2,0.635,3,0.635,7,0.508,18,0.078,20,0.508,21,0.274,28,0.781,38,0.051,39,0.051,70,1.308,73,0.635,74,1.579,86,1.3,99,0.951,102,1.82,105,1.722,109,1.935,111,1.935,114,1.155,115,1.448,116,1.155,118,2.317,124,2.663,128,1.512,130,2.397,134,2.363,140,2.092,141,1.3,142,1.3,156,2.937,162,2.363,175,2.555,191,2.937,200,2.211,204,1.668,221,0.951,251,1.3,350,2.397,374,2.397,390,1.753,422,1.753,503,3.808,504,3.808,505,3.808,506,3.808,507,3.808,508,3.808,509,3.108,510,2.273,511,2.273,512,2.273,513,2.273,514,2.273,515,2.273,516,3.108,517,3.808,518,4.117,519,4.117,520,2.273,521,3.108,522,3.542,523,2.273,524,3.542,525,2.273,526,2.273,527,2.273]],["title/miscellaneous/variables.html",[105,1.171,528,1.51]],["body/miscellaneous/variables.html",[18,0.077,38,0.066,39,0.066,73,0.953,105,1.427,115,1.383,187,2.499,203,2.499,204,1.427,251,1.427,427,2.63,428,3.531,429,2.63,528,2.63,529,3.41,530,3.41,531,4.426,532,4.026]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":221,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["0.8.26",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":234,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{},"overview.html":{}}}],["1.png",{"_index":479,"title":{},"body":{"index.html":{}}}],["1].adjbomb",{"_index":403,"title":{},"body":{"classes/board.html":{}}}],["1].isbomb",{"_index":400,"title":{},"body":{"classes/board.html":{}}}],["1].isrev",{"_index":401,"title":{},"body":{"classes/board.html":{}}}],["1].revealtil",{"_index":404,"title":{},"body":{"classes/board.html":{}}}],["1][col",{"_index":399,"title":{},"body":{"classes/board.html":{}}}],["1][col].adjbomb",{"_index":408,"title":{},"body":{"classes/board.html":{}}}],["1][col].isbomb",{"_index":406,"title":{},"body":{"classes/board.html":{}}}],["1][col].isrev",{"_index":407,"title":{},"body":{"classes/board.html":{}}}],["1][col].revealtil",{"_index":409,"title":{},"body":{"classes/board.html":{}}}],["2",{"_index":332,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{},"overview.html":{}}}],["2.5.4",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["2.amazonaws.com/angularj",{"_index":474,"title":{},"body":{"index.html":{}}}],["2.png",{"_index":480,"title":{},"body":{"index.html":{}}}],["2/10",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["2499",{"_index":333,"title":{},"body":{"components/UserInputComponent.html":{}}}],["25",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["2500",{"_index":336,"title":{},"body":{"components/UserInputComponent.html":{}}}],["3",{"_index":481,"title":{},"body":{"index.html":{}}}],["3.png",{"_index":482,"title":{},"body":{"index.html":{}}}],["3/12",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":483,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.png",{"_index":484,"title":{},"body":{"index.html":{}}}],["42",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":485,"title":{},"body":{"index.html":{}}}],["5.png",{"_index":486,"title":{},"body":{"index.html":{}}}],["500",{"_index":269,"title":{},"body":{"components/BoardComponent.html":{}}}],["6",{"_index":487,"title":{},"body":{"index.html":{}}}],["6.0.0",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":456,"title":{},"body":{"index.html":{}}}],["6.4.1",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["6.png",{"_index":488,"title":{},"body":{"index.html":{}}}],["6/14",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":243,"title":{},"body":{"components/BoardComponent.html":{}}}],["7",{"_index":489,"title":{},"body":{"index.html":{}}}],["7.png",{"_index":490,"title":{},"body":{"index.html":{}}}],["8",{"_index":491,"title":{},"body":{"index.html":{}}}],["8.png",{"_index":492,"title":{},"body":{"index.html":{}}}],["9/25",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["accord",{"_index":371,"title":{},"body":{"classes/board.html":{}}}],["accordingli",{"_index":374,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["actual_compon",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["add",{"_index":248,"title":{},"body":{"components/BoardComponent.html":{}}}],["adjac",{"_index":373,"title":{},"body":{"classes/board.html":{}}}],["adjbomb",{"_index":503,"title":{},"body":{"classes/tile.html":{}}}],["adjust",{"_index":131,"title":{},"body":{"components/BoardComponent.html":{}}}],["again",{"_index":259,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert",{"_index":136,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"congratul",{"_index":268,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"no",{"_index":256,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert(\"w",{"_index":270,"title":{},"body":{"components/BoardComponent.html":{}}}],["alert('cel",{"_index":334,"title":{},"body":{"components/UserInputComponent.html":{}}}],["allow",{"_index":135,"title":{},"body":{"components/BoardComponent.html":{}}}],["alreadi",{"_index":521,"title":{},"body":{"classes/tile.html":{}}}],["angular",{"_index":213,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["app.compon",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applic",{"_index":169,"title":{},"body":{"components/BoardComponent.html":{}}}],["appmodul",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["be",{"_index":182,"title":{},"body":{"components/BoardComponent.html":{}}}],["behavior",{"_index":176,"title":{},"body":{"components/BoardComponent.html":{}}}],["board",{"_index":70,"title":{"classes/board.html":{}},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["board'},{'nam",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["board(this.rowcount",{"_index":228,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.css",{"_index":71,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":72,"title":{},"body":{"components/BoardComponent.html":{}}}],["board/board.compon",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["boardcompon",{"_index":30,"title":{"components/BoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardformgroup",{"_index":288,"title":{},"body":{"components/UserInputComponent.html":{}}}],["bomb",{"_index":261,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["bombcheck",{"_index":344,"title":{},"body":{"classes/board.html":{}}}],["bombcheck(row",{"_index":357,"title":{},"body":{"classes/board.html":{}}}],["bombcount",{"_index":328,"title":{},"body":{"components/UserInputComponent.html":{}}}],["boolean",{"_index":200,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":412,"title":{},"body":{"classes/board.html":{}}}],["bound",{"_index":364,"title":{},"body":{"classes/board.html":{}}}],["boundscheck",{"_index":345,"title":{},"body":{"classes/board.html":{}}}],["boundscheck(row",{"_index":361,"title":{},"body":{"classes/board.html":{}}}],["brows",{"_index":501,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["calcul",{"_index":370,"title":{},"body":{"classes/board.html":{}}}],["call",{"_index":164,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["ceas",{"_index":386,"title":{},"body":{"classes/board.html":{}}}],["cellcount",{"_index":327,"title":{},"body":{"components/UserInputComponent.html":{}}}],["chang",{"_index":156,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["check",{"_index":126,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["cite",{"_index":458,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/board.html":{},"classes/tile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"overview.html":{},"classes/tile.html":{}}}],["cli",{"_index":454,"title":{},"body":{"index.html":{}}}],["click",{"_index":162,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["clicked(right",{"_index":516,"title":{},"body":{"classes/tile.html":{}}}],["clock",{"_index":189,"title":{},"body":{"components/BoardComponent.html":{}}}],["cluster_appmodul",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":283,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["col",{"_index":124,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["colcount",{"_index":342,"title":{},"body":{"classes/board.html":{}}}],["column",{"_index":183,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["columncount",{"_index":95,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["complet",{"_index":148,"title":{},"body":{"components/BoardComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["condit",{"_index":108,"title":{},"body":{"components/BoardComponent.html":{}}}],["constructor",{"_index":99,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["constructor(formbuild",{"_index":293,"title":{},"body":{"components/UserInputComponent.html":{}}}],["constructor(priv",{"_index":216,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["constructor(row",{"_index":350,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["constructor(st",{"_index":100,"title":{},"body":{"components/BoardComponent.html":{}}}],["contain",{"_index":381,"title":{},"body":{"classes/board.html":{}}}],["convert",{"_index":186,"title":{},"body":{"components/BoardComponent.html":{}}}],["coordin",{"_index":360,"title":{},"body":{"classes/board.html":{}}}],["core",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":303,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["correctli",{"_index":192,"title":{},"body":{"components/BoardComponent.html":{}}}],["count",{"_index":132,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["coverag",{"_index":413,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":297,"title":{},"body":{"components/UserInputComponent.html":{}}}],["createform",{"_index":290,"title":{},"body":{"components/UserInputComponent.html":{}}}],["current",{"_index":127,"title":{},"body":{"components/BoardComponent.html":{}}}],["declar",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":203,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":102,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["depend",{"_index":42,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":181,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["determin",{"_index":174,"title":{},"body":{"components/BoardComponent.html":{}}}],["dialog",{"_index":306,"title":{},"body":{"components/UserInputComponent.html":{}}}],["dialogu",{"_index":145,"title":{},"body":{"components/BoardComponent.html":{}}}],["digit",{"_index":188,"title":{},"body":{"components/BoardComponent.html":{}}}],["digitaltim",{"_index":76,"title":{},"body":{"components/BoardComponent.html":{}}}],["direct",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["display",{"_index":215,"title":{},"body":{"components/BoardComponent.html":{}}}],["document",{"_index":277,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{},"index.html":{}}}],["documentation'},{'nam",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["documentation.component.css",{"_index":278,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.html",{"_index":279,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.compon",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["documentationcompon",{"_index":32,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["dynam",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["elaps",{"_index":195,"title":{},"body":{"components/BoardComponent.html":{}}}],["element",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["empti",{"_index":380,"title":{},"body":{"classes/board.html":{},"index.html":{}}}],["encount",{"_index":271,"title":{},"body":{"components/BoardComponent.html":{}}}],["end",{"_index":146,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["environ",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.preventdefault",{"_index":391,"title":{},"body":{"classes/board.html":{}}}],["exce",{"_index":335,"title":{},"body":{"components/UserInputComponent.html":{}}}],["exeed",{"_index":247,"title":{},"body":{"components/BoardComponent.html":{}}}],["exist",{"_index":134,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["export",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"overview.html":{},"classes/tile.html":{}}}],["failur",{"_index":272,"title":{},"body":{"components/BoardComponent.html":{}}}],["fals",{"_index":204,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["fan",{"_index":379,"title":{},"body":{"classes/board.html":{}}}],["favicon",{"_index":461,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":307,"title":{},"body":{"components/UserInputComponent.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{}}}],["flag",{"_index":130,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["flagcheck",{"_index":87,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcheck(row",{"_index":123,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagcount",{"_index":77,"title":{},"body":{"components/BoardComponent.html":{}}}],["flaggedmin",{"_index":78,"title":{},"body":{"components/BoardComponent.html":{}}}],["flagtil",{"_index":507,"title":{},"body":{"classes/tile.html":{}}}],["font",{"_index":468,"title":{},"body":{"index.html":{}}}],["for(let",{"_index":395,"title":{},"body":{"classes/board.html":{}}}],["format",{"_index":190,"title":{},"body":{"components/BoardComponent.html":{}}}],["formbuild",{"_index":294,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formgroup",{"_index":309,"title":{},"body":{"components/UserInputComponent.html":{}}}],["formsmodul",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":378,"title":{},"body":{"classes/board.html":{}}}],["game",{"_index":147,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["game/covered.png",{"_index":475,"title":{},"body":{"index.html":{}}}],["game/empty.png",{"_index":476,"title":{},"body":{"index.html":{}}}],["game/mine.png",{"_index":477,"title":{},"body":{"index.html":{}}}],["game/numb",{"_index":478,"title":{},"body":{"index.html":{}}}],["gameoverdialog",{"_index":88,"title":{},"body":{"components/BoardComponent.html":{}}}],["gener",{"_index":453,"title":{},"body":{"index.html":{}}}],["get",{"_index":451,"title":{"index.html":{}},"body":{}}],["github",{"_index":466,"title":{},"body":{"index.html":{}}}],["given",{"_index":359,"title":{},"body":{"classes/board.html":{}}}],["haswon",{"_index":79,"title":{},"body":{"components/BoardComponent.html":{}}}],["hit",{"_index":384,"title":{},"body":{"classes/board.html":{}}}],["hour",{"_index":244,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["http://lui",{"_index":471,"title":{},"body":{"index.html":{}}}],["http://www.simplygoodcode.com/2014/04/angularj",{"_index":494,"title":{},"body":{"index.html":{}}}],["https://compodoc.github.io/compodoc",{"_index":460,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/icons/bomb?style=solid",{"_index":462,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/book",{"_index":465,"title":{},"body":{"index.html":{}}}],["https://fontawesome.com/v4.7.0/icon/github",{"_index":467,"title":{},"body":{"index.html":{}}}],["https://fonts.google.com/specimen/jura",{"_index":469,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/ng2",{"_index":459,"title":{},"body":{"index.html":{}}}],["icon",{"_index":464,"title":{},"body":{"index.html":{}}}],["identifi",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["if(!this.isgameov",{"_index":260,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(!this.stoptim",{"_index":239,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isbomb",{"_index":252,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.board.rows[row][col].isflag",{"_index":263,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.flaggedmin",{"_index":253,"title":{},"body":{"components/BoardComponent.html":{}}}],["if(this.isflag",{"_index":527,"title":{},"body":{"classes/tile.html":{}}}],["ii/index.html",{"_index":498,"title":{},"body":{"index.html":{}}}],["imag",{"_index":518,"title":{},"body":{"classes/tile.html":{}}}],["implement",{"_index":68,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["index",{"_index":73,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["inform",{"_index":161,"title":{},"body":{"components/BoardComponent.html":{}}}],["init",{"_index":113,"title":{},"body":{"components/BoardComponent.html":{}}}],["initi",{"_index":104,"title":{},"body":{"components/BoardComponent.html":{}}}],["input",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["input.compon",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["input.component.css",{"_index":286,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.html",{"_index":287,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.t",{"_index":285,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:10",{"_index":310,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:11",{"_index":311,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:12",{"_index":313,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:13",{"_index":312,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:14",{"_index":314,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:15",{"_index":295,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:22",{"_index":304,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:33",{"_index":296,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:49",{"_index":305,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input.component.ts:96",{"_index":300,"title":{},"body":{"components/UserInputComponent.html":{}}}],["input/us",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"components/UserInputComponent.html":{},"coverage.html":{}}}],["inspir",{"_index":493,"title":{},"body":{"index.html":{}}}],["isbomb",{"_index":504,"title":{},"body":{"classes/tile.html":{}}}],["isflag",{"_index":505,"title":{},"body":{"classes/tile.html":{}}}],["isgameov",{"_index":80,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["isoutofflag",{"_index":81,"title":{},"body":{"components/BoardComponent.html":{}}}],["isrev",{"_index":506,"title":{},"body":{"classes/tile.html":{}}}],["isvalid",{"_index":330,"title":{},"body":{"components/UserInputComponent.html":{}}}],["it'",{"_index":179,"title":{},"body":{"components/BoardComponent.html":{}}}],["iter",{"_index":185,"title":{},"body":{"components/BoardComponent.html":{}}}],["js",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["know",{"_index":151,"title":{},"body":{"components/BoardComponent.html":{}}}],["left",{"_index":177,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["legend",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["let",{"_index":150,"title":{},"body":{"components/BoardComponent.html":{}}}],["link",{"_index":463,"title":{},"body":{"index.html":{}}}],["live",{"_index":273,"title":{},"body":{"components/BoardComponent.html":{}}}],["lost",{"_index":153,"title":{},"body":{"components/BoardComponent.html":{}}}],["make",{"_index":496,"title":{},"body":{"index.html":{}}}],["mani",{"_index":372,"title":{},"body":{"classes/board.html":{}}}],["match",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["math.floor(minut",{"_index":245,"title":{},"body":{"components/BoardComponent.html":{}}}],["math.floor(this.timercount",{"_index":242,"title":{},"body":{"components/BoardComponent.html":{}}}],["matinputmodul",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["member",{"_index":519,"title":{},"body":{"classes/tile.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["method",{"_index":86,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["mine",{"_index":180,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"index.html":{}}}],["minecount",{"_index":96,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["mines_plac",{"_index":392,"title":{},"body":{"classes/board.html":{}}}],["minesweep",{"_index":340,"title":{},"body":{"components/UserInputComponent.html":{},"index.html":{}}}],["minut",{"_index":241,"title":{},"body":{"components/BoardComponent.html":{}}}],["miscellan",{"_index":528,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/board",{"_index":211,"title":{},"body":{"components/BoardComponent.html":{}}}],["modul",{"_index":40,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["necessari",{"_index":133,"title":{},"body":{"components/BoardComponent.html":{}}}],["need",{"_index":298,"title":{},"body":{"components/UserInputComponent.html":{}}}],["new",{"_index":155,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{}}}],["newboard",{"_index":291,"title":{},"body":{"components/UserInputComponent.html":{}}}],["newgam",{"_index":89,"title":{},"body":{"components/BoardComponent.html":{}}}],["ng2",{"_index":210,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["ngonchang",{"_index":90,"title":{},"body":{"components/BoardComponent.html":{}}}],["ngoninit",{"_index":280,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["non",{"_index":266,"title":{},"body":{"components/BoardComponent.html":{}}}],["none",{"_index":110,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["now",{"_index":302,"title":{},"body":{"components/UserInputComponent.html":{}}}],["npm",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":97,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["number",{"_index":118,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["numofcolumn",{"_index":325,"title":{},"body":{"components/UserInputComponent.html":{}}}],["numofrow",{"_index":323,"title":{},"body":{"components/UserInputComponent.html":{}}}],["object",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onc",{"_index":382,"title":{},"body":{"classes/board.html":{}}}],["onchang",{"_index":69,"title":{},"body":{"components/BoardComponent.html":{}}}],["oninit",{"_index":276,"title":{},"body":{"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["option",{"_index":116,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["otherwis",{"_index":171,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"classes/board.html":{},"overview.html":{}}}],["over",{"_index":178,"title":{},"body":{"components/BoardComponent.html":{}}}],["overview",{"_index":502,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":432,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":212,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["paramet",{"_index":114,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["part",{"_index":497,"title":{},"body":{"index.html":{}}}],["pass",{"_index":308,"title":{},"body":{"components/UserInputComponent.html":{}}}],["perez.s3",{"_index":472,"title":{},"body":{"index.html":{}}}],["place",{"_index":129,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["placemin",{"_index":346,"title":{},"body":{"classes/board.html":{}}}],["placenumb",{"_index":347,"title":{},"body":{"classes/board.html":{}}}],["placenumber(row",{"_index":368,"title":{},"body":{"classes/board.html":{}}}],["play",{"_index":163,"title":{},"body":{"components/BoardComponent.html":{}}}],["pop",{"_index":137,"title":{},"body":{"components/BoardComponent.html":{}}}],["post",{"_index":111,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["pre",{"_index":109,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["present",{"_index":144,"title":{},"body":{"components/BoardComponent.html":{}}}],["product",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":495,"title":{},"body":{"index.html":{}}}],["project",{"_index":452,"title":{},"body":{"index.html":{}}}],["properti",{"_index":74,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["provid",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"overview.html":{}}}],["public",{"_index":75,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["random",{"_index":367,"title":{},"body":{"classes/board.html":{}}}],["reach",{"_index":383,"title":{},"body":{"classes/board.html":{}}}],["reactiveformsmodul",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["recurs",{"_index":377,"title":{},"body":{"classes/board.html":{}}}],["recursive_rev",{"_index":348,"title":{},"body":{"classes/board.html":{}}}],["recursive_reveal(row",{"_index":375,"title":{},"body":{"classes/board.html":{}}}],["remain",{"_index":139,"title":{},"body":{"components/BoardComponent.html":{}}}],["remov",{"_index":257,"title":{},"body":{"components/BoardComponent.html":{}}}],["repres",{"_index":193,"title":{},"body":{"components/BoardComponent.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"components/BoardComponent.html":{},"overview.html":{}}}],["result",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":141,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["reveal",{"_index":175,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["revealedtil",{"_index":157,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealedtilescount",{"_index":82,"title":{},"body":{"components/BoardComponent.html":{}}}],["revealing/recurs",{"_index":385,"title":{},"body":{"classes/board.html":{}}}],["revealmin",{"_index":349,"title":{},"body":{"classes/board.html":{}}}],["revealtil",{"_index":508,"title":{},"body":{"classes/tile.html":{}}}],["right",{"_index":410,"title":{},"body":{"classes/board.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["row",{"_index":140,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["rowcount",{"_index":98,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["rxj",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["second",{"_index":246,"title":{},"body":{"components/BoardComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["set",{"_index":299,"title":{},"body":{"components/UserInputComponent.html":{}}}],["settimeout",{"_index":267,"title":{},"body":{"components/BoardComponent.html":{}}}],["setuptim",{"_index":91,"title":{},"body":{"components/BoardComponent.html":{}}}],["showboard",{"_index":289,"title":{},"body":{"components/UserInputComponent.html":{}}}],["simpl",{"_index":112,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["simpletim",{"_index":101,"title":{},"body":{"components/BoardComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["src/.../environment.prod.t",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/board/board.component.t",{"_index":67,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:11",{"_index":119,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:116",{"_index":184,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:12",{"_index":122,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:13",{"_index":120,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:14",{"_index":121,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:15",{"_index":199,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:16",{"_index":198,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:17",{"_index":208,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:176",{"_index":125,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:18",{"_index":201,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:19",{"_index":202,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:20",{"_index":197,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:21",{"_index":207,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:215",{"_index":173,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:22",{"_index":209,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:23",{"_index":206,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:24",{"_index":205,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:242",{"_index":143,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:25",{"_index":103,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:50",{"_index":158,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:61",{"_index":154,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:79",{"_index":165,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:96",{"_index":167,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/documentation/documentation.component.t",{"_index":275,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:12",{"_index":282,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentation/documentation.component.ts:8",{"_index":281,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/models/board.t",{"_index":341,"title":{},"body":{"classes/board.html":{},"coverage.html":{}}}],["src/app/models/board.ts:10",{"_index":351,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:123",{"_index":362,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:145",{"_index":358,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:162",{"_index":387,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:188",{"_index":376,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:37",{"_index":365,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:5",{"_index":353,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:6",{"_index":356,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:64",{"_index":369,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:7",{"_index":355,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:8",{"_index":352,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/board.ts:9",{"_index":354,"title":{},"body":{"classes/board.html":{}}}],["src/app/models/tile.t",{"_index":422,"title":{},"body":{"coverage.html":{},"classes/tile.html":{}}}],["src/app/models/tile.ts:2",{"_index":513,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:26",{"_index":520,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:3",{"_index":511,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:39",{"_index":515,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:4",{"_index":512,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:5",{"_index":510,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:6",{"_index":514,"title":{},"body":{"classes/tile.html":{}}}],["src/app/models/tile.ts:7",{"_index":509,"title":{},"body":{"classes/tile.html":{}}}],["src/app/us",{"_index":284,"title":{},"body":{"components/UserInputComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st",{"_index":117,"title":{},"body":{"components/BoardComponent.html":{}}}],["start",{"_index":159,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{}}}],["startup",{"_index":170,"title":{},"body":{"components/BoardComponent.html":{}}}],["stat",{"_index":274,"title":{},"body":{"components/BoardComponent.html":{}}}],["statement",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":149,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["stoptim",{"_index":83,"title":{},"body":{"components/BoardComponent.html":{}}}],["string",{"_index":196,"title":{},"body":{"components/BoardComponent.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["subscrib",{"_index":166,"title":{},"body":{"components/BoardComponent.html":{}}}],["subscribetim",{"_index":92,"title":{},"body":{"components/BoardComponent.html":{}}}],["support",{"_index":499,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":500,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["this.adjbomb",{"_index":526,"title":{},"body":{"classes/tile.html":{}}}],["this.board",{"_index":227,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.isgameov",{"_index":254,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.recursive_reveal(row",{"_index":265,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.revealmin",{"_index":262,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isflag",{"_index":250,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.rows[row][col].isrev",{"_index":249,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.boardformgroup",{"_index":315,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.valid",{"_index":331,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.columncount",{"_index":326,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.minecount",{"_index":329,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boardformgroup.value.rowcount",{"_index":324,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.boundscheck(row",{"_index":396,"title":{},"body":{"classes/board.html":{}}}],["this.col",{"_index":525,"title":{},"body":{"classes/tile.html":{}}}],["this.colcount",{"_index":388,"title":{},"body":{"classes/board.html":{}}}],["this.columncount",{"_index":229,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["this.createform",{"_index":318,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.digitaltim",{"_index":240,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flagcount",{"_index":223,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.flaggedmin",{"_index":220,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.formbuilder.group",{"_index":316,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.gameoverdialog",{"_index":255,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.haswon",{"_index":217,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.isbomb",{"_index":523,"title":{},"body":{"classes/tile.html":{}}}],["this.isflag",{"_index":524,"title":{},"body":{"classes/tile.html":{}}}],["this.isgameov",{"_index":219,"title":{},"body":{"components/BoardComponent.html":{},"classes/board.html":{}}}],["this.isrev",{"_index":522,"title":{},"body":{"classes/tile.html":{}}}],["this.minecount",{"_index":224,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.newboard",{"_index":337,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.newgam",{"_index":222,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.num",{"_index":339,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.recursive_reveal(row",{"_index":405,"title":{},"body":{"classes/board.html":{}}}],["this.revealedtilescount",{"_index":225,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.row",{"_index":390,"title":{},"body":{"classes/board.html":{},"classes/tile.html":{}}}],["this.rowcount",{"_index":338,"title":{},"body":{"components/UserInputComponent.html":{},"classes/board.html":{}}}],["this.rows[row",{"_index":398,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col",{"_index":411,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isbomb",{"_index":394,"title":{},"body":{"classes/board.html":{}}}],["this.rows[row][col].isflag",{"_index":402,"title":{},"body":{"classes/board.html":{}}}],["this.setuptim",{"_index":226,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.showboard",{"_index":317,"title":{},"body":{"components/UserInputComponent.html":{}}}],["this.st.newtimer('tim",{"_index":233,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.subscribe('tim",{"_index":237,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.st.unsubscribe(this.timerid",{"_index":236,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.stoptim",{"_index":218,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.subscribetim",{"_index":235,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.tilesrev",{"_index":389,"title":{},"body":{"classes/board.html":{}}}],["this.timercount",{"_index":230,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.timerid",{"_index":231,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.updatetim",{"_index":238,"title":{},"body":{"components/BoardComponent.html":{}}}],["tile",{"_index":128,"title":{"classes/tile.html":{}},"body":{"components/BoardComponent.html":{},"classes/board.html":{},"coverage.html":{},"index.html":{},"classes/tile.html":{}}}],["tile'",{"_index":517,"title":{},"body":{"classes/tile.html":{}}}],["tilecheck",{"_index":93,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilecheck(row",{"_index":172,"title":{},"body":{"components/BoardComponent.html":{}}}],["tilesrev",{"_index":343,"title":{},"body":{"classes/board.html":{}}}],["time",{"_index":194,"title":{},"body":{"components/BoardComponent.html":{}}}],["timer",{"_index":106,"title":{},"body":{"components/BoardComponent.html":{},"dependencies.html":{},"index.html":{}}}],["timercount",{"_index":84,"title":{},"body":{"components/BoardComponent.html":{}}}],["timerid",{"_index":85,"title":{},"body":{"components/BoardComponent.html":{}}}],["top",{"_index":397,"title":{},"body":{"classes/board.html":{}}}],["transfer",{"_index":301,"title":{},"body":{"components/UserInputComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["tri",{"_index":258,"title":{},"body":{"components/BoardComponent.html":{}}}],["true",{"_index":251,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":115,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["unclick",{"_index":470,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":232,"title":{},"body":{"components/BoardComponent.html":{}}}],["unsubscrib",{"_index":168,"title":{},"body":{"components/BoardComponent.html":{}}}],["up",{"_index":138,"title":{},"body":{"components/BoardComponent.html":{}}}],["updat",{"_index":191,"title":{},"body":{"components/BoardComponent.html":{},"classes/tile.html":{}}}],["updatetim",{"_index":94,"title":{},"body":{"components/BoardComponent.html":{}}}],["us",{"_index":214,"title":{},"body":{"components/BoardComponent.html":{}}}],["user",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{}}}],["userinputcompon",{"_index":34,"title":{"components/UserInputComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":160,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{}}}],["validateform",{"_index":292,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(1",{"_index":322,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.compose([validators.min(2",{"_index":319,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.pattern('^\\\\d",{"_index":321,"title":{},"body":{"components/UserInputComponent.html":{}}}],["validators.requir",{"_index":320,"title":{},"body":{"components/UserInputComponent.html":{}}}],["valu",{"_index":187,"title":{},"body":{"components/BoardComponent.html":{},"components/UserInputComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{}}}],["variabl",{"_index":105,"title":{"miscellaneous/variables.html":{}},"body":{"components/BoardComponent.html":{},"coverage.html":{},"classes/tile.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":455,"title":{},"body":{"index.html":{}}}],["void",{"_index":142,"title":{},"body":{"components/BoardComponent.html":{},"components/DocumentationComponent.html":{},"components/UserInputComponent.html":{},"classes/board.html":{},"classes/tile.html":{}}}],["want",{"_index":366,"title":{},"body":{"classes/board.html":{}}}],["wasn't",{"_index":264,"title":{},"body":{"components/BoardComponent.html":{}}}],["west",{"_index":473,"title":{},"body":{"index.html":{}}}],["while(mines_plac",{"_index":393,"title":{},"body":{"classes/board.html":{}}}],["win",{"_index":107,"title":{},"body":{"components/BoardComponent.html":{}}}],["within",{"_index":363,"title":{},"body":{"classes/board.html":{}}}],["won",{"_index":152,"title":{},"body":{"components/BoardComponent.html":{}}}],["work",{"_index":457,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BoardComponent\n                            \n                            \n                                DocumentationComponent\n                            \n                            \n                                UserInputComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UserInputComponent } from './user-input/user-input.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material';\nimport { BoardComponent } from './board/board.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserInputComponent,\n    BoardComponent,\n    DocumentationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                board\n                            \n                            \n                                digitalTimer\n                            \n                            \n                                flagCount\n                            \n                            \n                                flaggedMines\n                            \n                            \n                                hasWon\n                            \n                            \n                                isGameOver\n                            \n                            \n                                isOutOfFlags\n                            \n                            \n                                revealedTilesCount\n                            \n                            \n                                stopTimer\n                            \n                            \n                                timerCount\n                            \n                            \n                                timerID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flagCheck\n                            \n                            \n                                gameOverDialog\n                            \n                            \n                                newGame\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setupTimer\n                            \n                            \n                                subscribeTimer\n                            \n                            \n                                tileCheck\n                            \n                            \n                                updateTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(st: SimpleTimer)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n                \n                    \n                            Initializes variables for timer and winning conditions.\nPre: None.\nPost: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                  \n                                                        \n                                                                    SimpleTimer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mineCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        num\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowCount\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:176\n                            \n                        \n\n\n                \n                    \n                            Checks all conditions on current tile, places flag and adjusts flag count as necessary. \nPre: The board exists.\nPost: flag is placed if allowed, if not alert will pop up if not flags remaining.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameOverDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \ngameOverDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:242\n                            \n                        \n\n\n                \n                    \n                            Presents dialogue at the end of the game.\nPre: Game has been completed.\nPost: Stops timer and lets user know if they won or lost.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Initializes properties for a new game.\nPre: User input has changed.\nPost: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Starts a new game.\nPre: User provides valid information and clicks \"play game\".\nPost: newGame is called, initializes properties for new game.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Resets timerCount and subscribes the timer.\nPre: newGame has been called.\nPost: timerCount is reset and the timer is subscribed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribeTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubscribeTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes timer on application startup, subscribes timer when called otherwise\nPre: setupTimer has been called\nPost: Timer is unsubscribed on application startup, timer is subscribed otherwise\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \ntileCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:215\n                            \n                        \n\n\n                \n                    \n                            Determines revealing behavior of a left-clicked tile.\nPre: User left-clicks a tile and game is not over.\nPost: tile is revealed, game ends if it's a mine.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile being flagged.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile being flagged.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/board/board.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Iterates the timerCount, converts value to a digital clock format, updates digitalTimer.\nPre: Timer has been subscribed.\nPost: timerCount has been iterated, digitalTimer correctly represents the time elapsed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            board\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        board:     board\n\n                    \n                \n                    \n                        \n                            Type :     board\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            digitalTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        digitalTimer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flagCount:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flaggedMines\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flaggedMines:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasWon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasWon:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutOfFlags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOutOfFlags:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealedTilesCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        revealedTilesCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stopTimer:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnChanges, Input } from '@angular/core';\nimport { SimpleTimer } from 'ng2-simple-timer';\nimport { board } from '../models/board';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css'],\n})\nexport class BoardComponent implements OnChanges {\n  @Input() columnCount: number;\n  @Input() rowCount: number;\n  @Input() mineCount: number;\n  @Input() num: number;\n  flaggedMines: number;\n  flagCount;\n  timerCount: number;\n  hasWon: boolean;\n  isGameOver: boolean;\n  digitalTimer: string;\n  stopTimer: boolean;\n  timerID: string;\n  revealedTilesCount: number;\n  isOutOfFlags = false;\n  public board: board;\n\n  /**\n   * Initializes variables for timer and winning conditions.\n   * \n   * Pre: None.\n   * \n   * Post: hasWon, stopTime, isGameOver, simple timer, and flaggedMines have been initalized.\n   * \n   * @param SimpleTimer Angular class used to display the elapsed time.\n   */\n  constructor(private st: SimpleTimer) {\n    this.hasWon = false;\n    this.stopTimer = false;\n    this.isGameOver = false;\n    this.flaggedMines = 0;\n  }\n\n  /**\n   * Starts a new game.\n   * \n   * Pre: User provides valid information and clicks \"play game\".\n   * \n   * Post: newGame is called, initializes properties for new game.\n   */\n  ngOnChanges() {\n    this.newGame();\n  }\n\n  /**\n   * Initializes properties for a new game.\n   * \n   * Pre: User input has changed.\n   * \n   * Post: flagCount, isGameOver, hasWon, revealedTiles, flaggedMines, board, and the timer component has been initalized.\n   */\n  newGame() {\n    this.flagCount = this.mineCount; //Initialize flagCount\n    this.isGameOver = false;\n    this.hasWon = false;\n    this.flaggedMines = 0;\n    this.revealedTilesCount = 0;\n    this.setupTimer();\n    this.board = new board(this.rowCount, this.columnCount, this.mineCount);\n    \n  }\n\n  /**\n   * Resets timerCount and subscribes the timer.\n   * \n   * Pre: newGame has been called.\n   * \n   * Post: timerCount is reset and the timer is subscribed.\n   */\n  setupTimer() {\n    this.stopTimer = false;\n    this.timerCount = 0; //Reset timer count\n    if (this.timerID == undefined) //If timer has not been subscribed\n    {\n      this.st.newTimer('Timer', 1);\n      this.subscribeTimer();\n    }\n  }\n\n  /**\n   * Unsubscribes timer on application startup, subscribes timer when called otherwise\n   * \n   * Pre: setupTimer has been called\n   * \n   * Post: Timer is unsubscribed on application startup, timer is subscribed otherwise\n   */\n  subscribeTimer() {\n    if (this.mineCount == 0) //Application startup\n    {\n      this.st.unsubscribe(this.timerID);\n      this.timerID = undefined;\n    }\n    else\n    {\n      this.stopTimer = false;\n      this.timerID = this.st.subscribe('Timer', () => this.updateTimer());\n    }\n  }\n\n  /**\n   * Iterates the timerCount, converts value to a digital clock format, updates digitalTimer.\n   * \n   * Pre: Timer has been subscribed.\n   * \n   * Post: timerCount has been iterated, digitalTimer correctly represents the time elapsed.\n   */\n  updateTimer()\n  {\n    if(!this.stopTimer) {\n      this.timerCount++;\n\n      /////////////////////Update digital timer string/////////////////////\n\n      this.digitalTimer = \"\"; //Reset value\n\n      //Initializations\n      let minutes = Math.floor(this.timerCount / 60);\n      let hours = Math.floor(minutes / 60);\n      if (hours > 0)\n      {\n        minutes = minutes - hours * 60;\n      }\n      let seconds = this.timerCount % 60;\n\n      //If time has exeeded 1 hour\n      if (hours != 0)\n      {\n        this.digitalTimer += hours + \":\"; //Add hours\n\n        if (minutes  0 && !this.board.rows[row][col].isRevealed) { // place flag\n        this.board.rows[row][col].isFlagged = true;\n        this.flagCount--;\n        if(this.board.rows[row][col].isBomb) {\n          this.flaggedMines++;\n        }\n        if(this.flaggedMines === this.mineCount) { // check for win\n          this.hasWon = true;\n          this.isGameOver = true;\n          this.board.isGameOver = true;\n          this.gameOverDialog();\n        }\n      }\n      else if (this.flagCount === 0 && !this.board.rows[row][col].isRevealed) {\n        alert(\"No flags remaining, remove a flag and try again.\");\n      }\n    }\n  }\n\n  /**\n   * Determines revealing behavior of a left-clicked tile.\n   * \n   * Pre: User left-clicks a tile and game is not over.\n   * \n   * Post: tile is revealed, game ends if it's a mine.\n   * \n   * @param row The row of the tile being flagged.\n   * \n   * @param col The column of the tile being flagged.\n   */\n  tileCheck(row: number, col: number) {\n    if(!this.isGameOver) {\n      if(this.board.rows[row][col].isBomb) { // bomb was clicked, end game\n        this.board.revealMines();\n        this.isGameOver = true;\n        this.gameOverDialog();\n      }\n      else if(this.board.rows[row][col].isFlagged) { // flagged tile was clicked but wasn't a bomb\n        this.board.rows[row][col].isFlagged = false;\n        this.board.rows[row][col].isRevealed = true;\n        this.flagCount++;\n        this.board.recursive_reveal(row, col);\n      }\n      else { // non-flag, non-bomb tile was clicked, reveal tile\n        this.board.rows[row][col].isRevealed = true;\n        this.board.recursive_reveal(row, col);\n      }\n    }\n  }\n  \n  /**\n   * Presents dialogue at the end of the game.\n   * \n   * Pre: Game has been completed.\n   * \n   * Post: Stops timer and lets user know if they won or lost.\n   */\n  gameOverDialog(): void {\n    this.stopTimer = true;\n    if (this.hasWon) {\n      setTimeout(() => alert(\"Congratulations! You win!\"), 500);\n    }\n    else {\n      setTimeout(() => alert(\"We all encounter failures in our lives.\"), 500);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        Timer\n        \n    \n\n    \n        Flags\n        \n    \n\n    \n        \n            \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n        Stats\n        Mines Flagged: {{flaggedMines}}\n        Time: {{digitalTimer}} \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Timer                        Flags                                                                                                                                                                                                                                                                                                                                                        Stats        Mines Flagged: {{flaggedMines}}        Time: {{digitalTimer}}     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                documentation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/documentation/documentation.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.css']\n})\nexport class DocumentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    Documentation\n    \n  \n\n  \n    Source Code\n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Documentation            Source Code      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInputComponent.html":{"url":"components/UserInputComponent.html","title":"component - UserInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-input/user-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-input\n            \n\n            \n                styleUrls\n                user-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardFormGroup\n                            \n                            \n                                columnCount\n                            \n                            \n                                mineCount\n                            \n                            \n                                num\n                            \n                            \n                                rowCount\n                            \n                            \n                                showBoard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                newBoard\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-input/user-input.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Creates validators for the inputs that need to be checked.\nPre: None.\nPost: ColumnCount, RowCount, and MineCount validators are set.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewBoard()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Transfers all user inputs to the board.\nPre: Inputs have been validated.\nPost: Board now has correct column, row, and mine count.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Validates user inputs and provides dialog feedback when the user does not pass correct input. \nCalls new board when input has been validated.\nPre: User has provided input.\nPost: newBoard is called after valid input.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boardFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        boardFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columnCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            num\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        num:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showBoard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBoard:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user-input/user-input.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-user-input',\n  templateUrl: './user-input.component.html',\n  styleUrls: ['./user-input.component.css']\n})\nexport class UserInputComponent implements OnInit {\n\n  boardFormGroup: FormGroup;\n  columnCount: number = 0;\n  rowCount: number = 0;\n  mineCount: number = 0;\n  showBoard: boolean;\n  num: number = 0;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.boardFormGroup = this.formBuilder.group({});\n    this.showBoard = false;\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n   /**\n   * Creates validators for the inputs that need to be checked.\n   * \n   * Pre: None.\n   * \n   * Post: ColumnCount, RowCount, and MineCount validators are set.\n   */\n  createForm(): void {\n    this.boardFormGroup = this.formBuilder.group({\n      ColumnCount: ['', Validators.compose([Validators.min(2), Validators.required, Validators.pattern('^\\\\d+$')])],\n      RowCount: ['', Validators.compose([Validators.min(2), Validators.required, Validators.pattern('^\\\\d+$')])],\n      MineCount: ['', Validators.compose([Validators.min(1), Validators.required, Validators.pattern('^\\\\d+$')])],\n    });\n  }\n\n   /**\n   * Validates user inputs and provides dialog feedback when the user does not pass correct input. \n   * Calls new board when input has been validated.\n   * \n   * Pre: User has provided input.\n   * \n   * Post: newBoard is called after valid input.\n   */\n  validateForm(): void {\n    var numOfRows = this.boardFormGroup.value.RowCount;\n    var numOfColumns = this.boardFormGroup.value.ColumnCount;\n    var cellCount = numOfRows * numOfColumns;\n    var bombCount = this.boardFormGroup.value.MineCount;\n    var isValid = this.boardFormGroup.valid && bombCount = 2 && numOfColumns >= 2 && numOfRows = 1 && bombCount  2499)\n      {\n        alert('Cell count cannot exceed 2500');\n      }\n    }\n    else\n    {\n      this.newBoard();\n    }\n  }\n\n   /**\n   * Transfers all user inputs to the board.\n   * \n   * Pre: Inputs have been validated.\n   * \n   * Post: Board now has correct column, row, and mine count.\n   */\n  newBoard() {\n    this.columnCount = this.boardFormGroup.value.ColumnCount;\n    this.rowCount = this.boardFormGroup.value.RowCount;\n    this.mineCount= this.boardFormGroup.value.MineCount;\n    this.showBoard = true;\n    this.num = this.num + 1;\n  }\n}\n\n    \n\n    \n        \n  Minesweeper\n\n\n\n\n    \n      \n        Columns\n        \n      \n\n      \n        Rows\n        \n      \n\n      \n        Mines\n        \n      \n    \n\n    \n    New Game\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Minesweeper                  Columns                            Rows                            Mines                          New Game'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'UserInputComponent', 'selector': 'app-user-input'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/board.html":{"url":"classes/board.html","title":"class - board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/board.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                colCount\n                            \n                            \n                                    Public\n                                isGameOver\n                            \n                            \n                                    Public\n                                mineCount\n                            \n                            \n                                    Public\n                                rowCount\n                            \n                            \n                                    Public\n                                rows\n                            \n                            \n                                    Public\n                                tilesRevealed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bombCheck\n                            \n                            \n                                boundsCheck\n                            \n                            \n                                placeMines\n                            \n                            \n                                placeNumber\n                            \n                            \n                                recursive_reveal\n                            \n                            \n                                revealMines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rows: number, cols: number, mines: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/board.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cols\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mines\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            colCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isGameOver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isGameOver:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mineCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mineCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rowCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tilesRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tilesRevealed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/board.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bombCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nbombCheck(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:145\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is a bomb.\nPre: There must be a board in existence.\nPost: Checks if there is a bomb at the given coordinate.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boundsCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nboundsCheck(row: , col: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:123\n                            \n                        \n\n\n                \n                    \n                            For a given tile at coordinates (row, col), checks if the tile is within the bounds of the board.\nPre: There must be a board in existence.\nPost: Returns true if the tile is within the bounds of the board, returns false otherwise.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the coordinate to be checked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the coordinate to be checked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:37\n                            \n                        \n\n\n                \n                    \n                            Given the number of mines the user wanted, places mines at random coordinates.\nPre: There must be a board in existence.\nPost: Places the user-defined number of mines .\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            placeNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nplaceNumber(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:64\n                            \n                        \n\n\n                \n                    \n                            Calculates what number to place in every tile, then places the correct number according to how many bombs are adjacent to that tile.\nPre: There must be a board in existence.\nPost: Calculates adjacent bombs to any given tile and places numbers accordingly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the tile that was clicked.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the tile that was clicked.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recursive_reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nrecursive_reveal(row: number, col: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:188\n                            \n                        \n\n\n                \n                    \n                            Clicking on a tile calls the recursive reveal function, the function then reveals tiles\nfanning out in every direction if they are empty or contain a number. Once the function \nreaches a numbered tile, the recursion stops.\nPre: There must be a board in existence.\nPost: When a tile is clicked, tiles fanning out from the clicked tile are revealed.\nIf the function hits a number in any direction, the revealing/recursion ceases.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The row of the clicked tile.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The column of the clicked tile.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealMines\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealMines()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/board.ts:162\n                            \n                        \n\n\n                \n                    \n                            After the user hits a bomb and the game ends, all of the mines are revealed.\nPre: There must be a board in existence.\nPost: If the user hits a bomb and ends the game, reveals all the mines.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { tile } from \"./tile\";\n\nexport class board\n{\n    public isGameOver: boolean;\n    public rows: any[];\n    public rowCount: number;\n    public colCount: number;\n    public mineCount: number;\n    public tilesRevealed: number;\n\n    constructor(rows: number, cols: number, mines: number) {\n        this.rowCount = rows;\n        this.colCount = cols;\n        this.mineCount = mines;\n        this.tilesRevealed = 0;\n        this.isGameOver = false;\n        this.rows = [];\n        for (let i = 0; i  event.preventDefault());\n    }\n\n    /**\n     * Given the number of mines the user wanted, places mines at random coordinates.\n     * \n     * Pre: There must be a board in existence.\n     *\n     * Post: Places the user-defined number of mines .\n     */\n    placeMines()\n    {\n      let mines_placed = 0;\n      while(mines_placed  this.rowCount-1 || col  this.colCount-1) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n\n  /**\n   * For a given tile at coordinates (row, col), checks if the tile is a bomb.\n   * \n   * Pre: There must be a board in existence.\n   * \n   * Post: Checks if there is a bomb at the given coordinate.\n   * \n   * @param row The row of the coordinate to be checked.\n   * \n   * @param col The column of the coordinate to be checked.\n   */\n  bombCheck(row: number, col: number): boolean {\n    if (this.rows[row][col].isBomb) {\n      return true\n    } \n    else {\n      return false;\n    }\n  }\n\n\n  /**\n   * After the user hits a bomb and the game ends, all of the mines are revealed.\n   * \n   * Pre: There must be a board in existence.\n   * \n   * Post: If the user hits a bomb and ends the game, reveals all the mines.\n   */\n  revealMines() {\n      for(let i = 0; i  0) && !this.isGameOver)\n    {\n      if (this.boundsCheck(row - 1, col - 1)) { // top left tile\n        if (!this.rows[row - 1][col - 1].isBomb && !this.rows[row - 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col - 1].adjBombs > 0) {\n\n            this.rows[row - 1][col - 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col - 1].revealTile();\n            this.recursive_reveal(row - 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col)) { // top tile\n        if (!this.rows[row - 1][col].isBomb && !this.rows[row - 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col].adjBombs > 0){\n            \n            this.rows[row - 1][col].revealTile();\n\n            \n          }\n          else{\n            this.rows[row - 1][col].revealTile();\n            this.recursive_reveal(row - 1, col);\n            \n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row - 1, col + 1)) { // top right tile\n        if (!this.rows[row - 1][col + 1].isBomb && !this.rows[row - 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row - 1][col + 1].adjBombs > 0) {\n\n            this.rows[row - 1][col + 1].revealTile();\n          }\n          else {\n            this.rows[row - 1][col + 1].revealTile();\n            this.recursive_reveal(row - 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n      if (this.boundsCheck(row, col - 1)) { // left tile \n        if (!this.rows[row][col - 1].isBomb && !this.rows[row][col - 1].isRevealed && !this.rows[row][col].isFlagged){\n          if (this.rows[row][col - 1].adjBombs > 0) {\n            this.rows[row][col - 1].revealTile();\n            \n          }\n          else {\n            this.rows[row][col - 1].revealTile();\n            this.recursive_reveal(row, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row, col + 1)) { // right tile\n        if (!this.rows[row][col + 1].isBomb && !this.rows[row][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row][col + 1].adjBombs > 0) {\n            this.rows[row][col + 1].revealTile();\n          }\n          else {\n            this.rows[row][col + 1].revealTile();\n            this.recursive_reveal(row, col + 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n    if (this.boundsCheck(row + 1, col)) { // bottom tile\n      if (!this.rows[row + 1][col].isBomb && !this.rows[row + 1][col].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col].adjBombs > 0) {\n            this.rows[row + 1][col].revealTile();\n          }\n          else {\n            this.rows[row + 1][col].revealTile();\n            this.recursive_reveal(row + 1, col);\n          }\n        this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col - 1)) { // bottom left tile\n        if (!this.rows[row + 1][col - 1].isBomb && !this.rows[row + 1][col - 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col - 1].adjBombs > 0) {\n\n            this.rows[row + 1][col - 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col - 1].revealTile();\n            this.recursive_reveal(row + 1, col - 1);\n          }\n          this.tilesRevealed++;\n        }\n      }\n      if (this.boundsCheck(row + 1, col + 1)) { // bottom right tile\n        if (!this.rows[row + 1][col + 1].isBomb && !this.rows[row + 1][col + 1].isRevealed && !this.rows[row][col].isFlagged) {\n          if (this.rows[row + 1][col + 1].adjBombs > 0) {\n\n            this.rows[row + 1][col + 1].revealTile();\n\n          }\n          else {\n            this.rows[row + 1][col + 1].revealTile();\n            this.recursive_reveal(row + 1, col + 1);\n\n          }\n          this.tilesRevealed++;\n\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            \n                component\n            \n            \n                BoardComponent\n            \n            \n                36 %\n                (9/25)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            \n                component\n            \n            \n                DocumentationComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/board.ts\n            \n            \n                class\n            \n            \n                board\n            \n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/models/tile.ts\n            \n            \n                class\n            \n            \n                tile\n            \n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/user-input/user-input.component.ts\n            \n            \n                component\n            \n            \n                UserInputComponent\n            \n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            ng2-simple-timer : ^6.0.0\n        \n            npm : ^6.4.1\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMinesweeper\nThis project was generated with Angular CLI version 6.1.5.\nWorks Cited\nTimer\nhttps://www.npmjs.com/package/ng2-simple-timer\nDocumentation generator\nhttps://compodoc.github.io/compodoc/\nFavicon\nhttps://fontawesome.com/icons/bomb?style=solid\nDocumentation Link Icon\nhttps://fontawesome.com/v4.7.0/icon/book\nGithub Link Icon\nhttps://fontawesome.com/v4.7.0/icon/github\nFont\nhttps://fonts.google.com/specimen/Jura\nIcons\nUnclicked Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/covered.png\nEmpty Tile - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/empty.png\nMine - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/mine.png\n1 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-1.png\n2 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-2.png\n3 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-3.png\n4 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-4.png\n5 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-5.png\n6 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-6.png\n7 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-7.png\n8 - http://luis-perez.s3-us-west-2.amazonaws.com/angularjs-minesweeper-game/number-8.png\nInspiration\nhttp://www.simplygoodcode.com/2014/04/angularjs-game-programming-making-minesweeper-part-ii/index.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nUserInputComponent\n\nUserInputComponent\n\nAppModule -->\n\nUserInputComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/tile.html":{"url":"classes/tile.html","title":"class - tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tile.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adjBombs\n                            \n                            \n                                col\n                            \n                            \n                                isBomb\n                            \n                            \n                                isFlagged\n                            \n                            \n                                isRevealed\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flagTile\n                            \n                            \n                                revealTile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tile.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adjBombs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adjBombs:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            col\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        col:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBomb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBomb:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFlagged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isFlagged:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRevealed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isRevealed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            row\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        row:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/tile.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flagTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nflagTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:39\n                            \n                        \n\n\n                \n                    \n                            Flags the clicked(right click) on tile and updates the tile's image.\nPre: There must be a board in existence.\nPost: Changes member variables and the image of the tile.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealTile\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealTile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/tile.ts:26\n                            \n                        \n\n\n                \n                    \n                            Reveals the clicked on tile and updates the tile's member variables and image.\nPre: There must be a board in existence.\nPost: Reveals the tile if it is not already revealed, changes member variables accordingly.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class tile {\n    isRevealed: boolean;\n    isBomb: boolean;\n    isFlagged: boolean;\n    adjBombs: number;\n    row: number;\n    col: number;\n\n\n    constructor(row: number, col: number) {\n        this.isRevealed = false;\n        this.isBomb = false;\n        this.isFlagged = false;\n        this.row = row;\n        this.col = col;\n        this.adjBombs = 0;\n    }\n    \n    /**\n     * Reveals the clicked on tile and updates the tile's member variables and image.\n     * \n     * Pre: There must be a board in existence.\n     * \n     * Post: Reveals the tile if it is not already revealed, changes member variables accordingly.\n     */\n    revealTile() {\n        if (this.isRevealed === false && !this.isFlagged){\n            this.isRevealed = true;\n        }\n    }\n\n    /**\n     * Flags the clicked(right click) on tile and updates the tile's image.\n     * \n     * Pre: There must be a board in existence.\n     * \n     * Post: Changes member variables and the image of the tile.\n     */\n    flagTile(){\n        if(this.isFlagged === false){\n            this.isFlagged = true;\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
